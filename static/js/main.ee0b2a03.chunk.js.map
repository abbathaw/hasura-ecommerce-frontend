{"version":3,"sources":["utils/history.js","components/Cognito/cognito-variables.js","components/Cognito/Loading.js","components/Cognito/Login.js","components/styles/NavStyles.js","components/CartCount.js","components/Nav.js","components/styles/CartStyles.js","components/styles/Supreme.js","components/styles/CloseButton.js","components/styles/SickButton.js","lib/formatMoney.js","components/RemoveFromCart.js","components/CartItem.js","lib/calcTotalPrice.js","components/ErrorMessage.js","components/TakeMyMoney.js","components/Cart.js","lib/useLocalStorage.js","components/Header.js","components/Page.js","components/styles/Title.js","components/styles/ItemStyles.js","components/styles/PriceTag.js","components/AddToCart.js","components/Item.js","components/Items.js","components/SingleItem.js","components/Store.js","components/Stores.js","components/SingleStore.js","components/styles/Form.js","components/CreateStore.js","components/CreateItem.js","components/styles/OrderStyles.js","components/SingleOrder.js","components/styles/OrderItemStyles.js","components/Orders.js","components/App.js","components/Cognito/react-cognito-spa.js","index.js","components/Cognito/loading.svg","images/cover.png","images/mazada.png"],"names":["createBrowserHistory","AUTH_CONFIG","domain","process","clientId","responseType","redirectUri","signoutUri","tokenScopes","UserPoolId","region","Loading","style","position","display","justifyContent","height","width","top","bottom","left","right","backgroundColor","src","loading","alt","Logo","styled","h1","Login","useCognito","loginWithRedirect","className","Cover","Button","id","variant","onClick","NavStyles","ul","props","theme","black","lightgrey","AnimationStyles","span","Dot","div","red","CartCount","count","TransitionGroup","CSSTransition","unmountOnExit","classNames","key","timeout","enter","exit","Nav","useCartContext","isOpen","setIsOpen","cartCount","logout","to","CartStyles","open","Supreme","h3","CloseButton","button","SickButton","amount","options","currency","minimumFractionDigits","Intl","NumberFormat","format","DELETE_CURRENT_ITEM_IN_CART","gql","BigButton","RemoveFromCart","React","useState","setLoading","useMutation","removeFromCart","disabled","a","variables","refetchQueries","then","data","catch","err","console","log","message","title","CartItemStyles","li","CartItem","cartItem","item","img","formatMoney","price","quantity","cartItemId","calcTotalPrice","cart","reduce","tally","ErrorStyles","DisplayError","error","msg","includes","networkError","result","errors","length","map","i","data-test","replace","defaultProps","CREATE_ORDER_MUTATION","TakeMyMoney","children","total","history","useHistory","idToken","decodedJwt","jwtDecode","sendOrder","onToken","res","NProgress","start","token","done","push","createOrder","name","description","image","stripeKey","email","CART_ITEMS","Cart","setCartCount","useSubscription","GET_ALL_ITEMS_IN_CART","loading2","error2","cartData","cartLength","cart_items","accum","cartWithItems","items","filter","item_id","useLocalStorage","initialValue","window","localStorage","getItem","JSON","parse","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","StyledHeader","header","CartContext","createContext","useContext","Header","Provider","Mazada","secondColor","grey","offWhite","maxWidth","bs","StyledPage","Inner","GlobalStyle","createGlobalStyle","Page","Title","Item","PriceTag","GET_CURRENT_ITEM_IN_CART","ADD_TO_CART_MUTATION","UPDATE_ITEM_IN_CART","AddToCart","isLoading","updateCart","addToCart","useQuery","handleClick","currentItemInCart","cart_id","update","cache","e","ItemStyles","pathname","store","ALL_ITEMS_QUERY","Center","ItemsList","Items","hasRendered","setHasRendered","location","useLocation","useEffect","SingleItemStyles","StoreContainer","SINGLE_ITEM_QUERY","SingleItem","useParams","items_by_pk","Helmet","StoreTitle","StoreDesc","p","Store","type","ALL_STORES_QUERY","StoresList","StaticDesc","Stores","user_store","SINGLE_STORE_QUERY","StoreLayout","Container","Row","Col","Jumbotron","lg","Card","Body","items_aggregate","aggregate","Subtitle","ListGroup","eventKey","Footer","order_items_aggregate","order_items","order","SingleStore","stores_by_pk","marginTop","xl","md","sm","xs","keyframes","Form","form","CREATE_STORE_MUTATION","CreateStore","addStore","setAddStore","setError","handleChange","target","prevState","createStore","onSubmit","preventDefault","getExistingStores","readQuery","query","existingStores","newStore","insert_user_store","returning","writeQuery","aria-busy","htmlFor","placeholder","required","onChange","CREATE_ITEM_MUTATION","CreateItem","storeId","addItem","setAddItem","val","float","parseFloat","Number","isNaN","parseNumber","uploadFile","files","FormData","append","fetch","method","body","json","file","secure_url","createItem","store_id","newItem","insert_items","OrderStyles","SINGLE_ORDER_QUERY","SingleOrder","orders_by_pk","charge","created_at","OrderItemStyles","ALL_ORDERS_QUERY","OrderUl","Orders","orders","b","App","client","ApolloClient","link","WebSocketLink","uri","reconnect","connectionParams","headers","Authorization","InMemoryCache","createApolloClient","exact","path","component","AWSConfig","CognitoContext","CognitoProvider","initOptions","onRedirectCallback","isAuthenticated","setIsAuthenticated","user","setUser","cognitoClient","setCognito","setIdToken","initCognito","CognitoAuth","cognitoFromHook","userhandler","onSuccess","handleRedirectCallback","getCurrentUser","userFromCognito","onFailure","isUserSignedIn","getSignInUserSession","session","getIdToken","getJwtToken","curUrl","href","cognito","parseCognitoWebResponse","getSession","signOut","appState","targetUrl","mainRoutes","render","AppWebDomain","ClientId","RedirectUriSignIn","TokenScopesArray","RedirectUriSignOut","ReactDOM","document","getElementById","module","exports"],"mappings":"mOACeA,gBCDFC,EAAc,CACzBC,OAAQC,0CACRC,SAAUD,6BACVE,aAAc,QACdC,YAAaH,wBACbI,WAAYJ,wBACZK,YAAa,CACX,SACA,QACA,WAEFC,WAAYN,sBACZO,OAAQP,a,4ECYKQ,EArBC,WAcd,OACE,yBAAKC,MAdO,CACZC,SAAU,WACVC,QAAS,OACTC,eAAgB,SAChBC,OAAQ,QACRC,MAAO,QACPC,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,gBAAiB,UAKf,yBAAKC,IAAKC,IAASC,IAAI,c,+UCb7B,IAAMC,EAAOC,IAAOC,GAAV,KAgDKC,EAhCD,WAAO,IAAD,EACqBC,KAA/BN,EADU,EACVA,QAASO,EADC,EACDA,kBACjB,OAAIP,EACK,2CAGP,yBAAKQ,UAAU,WACb,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,mBACb,kBAACN,EAAD,KACA,yBAAKT,MAAM,QAAQM,IAAKU,IAAOR,IAAI,iBAFrC,sCAMA,yBAAKO,UAAU,mBAAf,4BACA,yBAAKA,UAAU,kBACb,kBAACE,EAAA,EAAD,CACEC,GAAG,aACHC,QAAQ,UACRJ,UAAU,sBACVK,QAAS,WACPN,EAAkB,MALtB,c,w0CCpCV,IA+DeO,EA/DGX,IAAOY,GAAV,KAkBF,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,SASd,SAAAF,GAAK,OAAIA,EAAMC,MAAME,aA6Bb,SAAAH,GAAK,OAAIA,EAAMC,MAAME,a,u2BCtDjD,IAAMC,EAAkBjB,IAAOkB,KAAV,KAyBfC,EAAMnB,IAAOoB,IAAV,KACO,SAAAP,GAAK,OAAIA,EAAMC,MAAMO,OA6BtBC,EAjBG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACd,kBAACN,EAAD,KACE,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACIC,eAAa,EACbrB,UAAU,QACVsB,WAAW,QACXC,IAAKL,EACLM,QAAS,CAAEC,MAAO,IAAKC,KAAM,MAE/B,kBAACZ,EAAD,KAAMI,OCdDS,EA/BH,WAAO,IAAD,EACuBC,KAAhCC,EADS,EACTA,OAAQC,EADC,EACDA,UAAWC,EADV,EACUA,UAKlBC,EAAWlC,KAAXkC,OAER,OACI,kBAAC,EAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,SAAT,QAGA,kBAAC,IAAD,CAAMA,GAAG,SAAT,QAGA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UAGA,oCACE,4BAAQ5B,QAjBK,WACnByB,GAAWD,KAgBL,WACU,kBAAC,EAAD,CAAWX,MAAOa,MAG9B,kBAAC,IAAD,CAAM1B,QAAS2B,EAAQC,GAAG,KAA1B,Y,klCC7BR,IAsDeC,EAtDIvC,IAAOoB,IAAV,KAiBZ,SAAAP,GAAK,OAAIA,EAAM2B,MAAN,+BAEkB,SAAA3B,GAAK,OAAIA,EAAMC,MAAMC,SAKtB,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,S,wNCxBnD,IAUe0B,EAVCzC,IAAO0C,GAAV,KACG,SAAA7B,GAAK,OAAIA,EAAMC,MAAMO,O,mMCDrC,IAUesB,EAVK3C,IAAO4C,OAAV,K,4WCAjB,IAiBeC,EAjBI7C,IAAO4C,OAAV,KCFD,WAASE,GACtB,IAAMC,EAAU,CACd9D,MAAO,WACP+D,SAAU,MACVC,sBAAuB,GAKzB,OAFIH,EAAS,MAAQ,IAAGC,EAAQE,sBAAwB,GACtC,IAAIC,KAAKC,aAAa,QAASJ,GAChCK,OAAON,EAAS,M,6ZCJnC,IAAMO,GAA8BC,IAAH,MAQ3BC,GAAYvD,IAAO4C,OAAV,MAKF,SAAA/B,GAAK,OAAIA,EAAMC,MAAMO,OAkCnBmC,GA7BO,SAAC,GAAU,IAAThD,EAAQ,EAARA,GAAQ,EACAiD,IAAMC,UAAS,GADf,mBACvB7D,EADuB,KACd8D,EADc,OAGLC,YAAYP,IAA9BQ,EAHuB,oBAM9B,OACU,kBAACN,GAAD,CACIO,SAAUjE,EACVa,QAAO,sBAAE,sBAAAqD,EAAA,6DACPJ,GAAW,GADJ,SAEDE,EAAe,CACnBG,UAAW,CAACxD,GAAIA,GAChByD,eAAgB,CAAC,8BAChBC,MAAK,YAAY,EAAVC,KACRR,GAAW,MACVS,OAAM,SAAAC,GACPC,QAAQC,IAAIF,EAAIG,SAChBb,GAAW,MATN,2CAYTc,MAAM,eAdV,S,2RCxBZ,IAAMC,GAAiB1E,IAAO2E,GAAV,MAES,SAAA9D,GAAK,OAAIA,EAAMC,MAAME,aA6CnC4D,GAhCE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEZC,EAAOD,EAASC,KACtB,OAAKA,EAQD,kBAACJ,GAAD,KACE,yBAAKpF,MAAM,MAAMM,IAAKkF,EAAKC,IAAKjF,IAAKgF,EAAKL,QAC1C,yBAAKpE,UAAU,qBACb,4BAAKyE,EAAKL,OACV,2BACGO,EAAYF,EAAKG,MAAQJ,EAASK,UAClC,MACD,4BACGL,EAASK,SADZ,SAC+BF,EAAYF,EAAKG,OADhD,WAKJ,kBAAC,GAAD,CAAgBzE,GAAIqE,EAASM,cAlB7B,kBAACT,GAAD,KACE,yDACA,kBAAC,GAAD,CAAgBlE,GAAIqE,EAASM,eC5BxB,SAASC,GAAeC,GACrC,OAAOA,EAAKC,QAAO,SAACC,EAAOV,GACzB,OAAKA,EAASC,KACPS,EAAQV,EAASK,SAAWL,EAASC,KAAKG,MADtBM,IAE1B,G,0SCCL,IAAMC,GAAcxF,IAAOoB,IAAV,MAeXqE,GAAe,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,IAAKA,IAAUA,EAAMlB,QAAS,OAAO,KACrC,IAAImB,EAAMD,EAAMlB,QAIhB,OAHKmB,EAAKC,SAAS,gBACjBD,EAAM,yCAEJD,EAAMG,cAAgBH,EAAMG,aAAaC,QAAUJ,EAAMG,aAAaC,OAAOC,OAAOC,OAC/EN,EAAMG,aAAaC,OAAOC,OAAOE,KAAI,SAACP,EAAOQ,GAAR,OAC1C,kBAACV,GAAD,CAAa5D,IAAKsE,GAChB,uBAAGC,YAAU,iBACX,yCACCR,EAAIS,QAAQ,kBAAmB,SAMtC,kBAACZ,GAAD,KACE,uBAAGW,YAAU,iBACX,yCACCR,EAAIS,QAAQ,kBAAmB,OAMxCX,GAAaY,aAAe,CAC1BX,MAAO,IAOMD,U,gRC5Cf,IAAMa,GAAwBhD,IAAH,MAgDZiD,GAvCI,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,SAAUnB,EAAiB,EAAjBA,KAAMoB,EAAW,EAAXA,MAC/BC,EAAUC,cACPC,EAAWzG,KAAXyG,QACDC,EAAaC,KAAUF,GAHiB,EAI1BhD,YAAY0C,IAAzBS,EAJuC,oBAKxCC,EAAO,uCAAG,WAAOC,GAAP,SAAAlD,EAAA,6DACdmD,KAAUC,QADI,SAGRJ,EAAU,CACd/C,UAAW,CACToD,MAAOH,EAAIzG,MAEZ0D,MAAK,YAAY,IAAVC,EAAS,EAATA,KACR+C,KAAUG,OACVX,EAAQY,KAAR,iBAAuBnD,EAAKoD,YAAY/G,QAEzC4D,OAAM,SAAAC,GACL6C,KAAUG,OACV/C,QAAQoB,MAAMrB,EAAIG,YAbN,2CAAH,sDAkBX,OACQ,kBAAC,KAAD,CACI1B,OAAQsC,GAAeC,GACvBmC,KAAK,SACLC,YAAW,mBAAchB,EAAd,WACXiB,MAAOrC,EAAKW,QAAUX,EAAK,GAAGP,MAAQO,EAAK,GAAGP,KAAKC,IACnD4C,UAAU,6CACV3E,SAAS,MACT4E,MAAOf,GAAcA,EAAWe,MAAQf,EAAWe,MAAQ,oBAC3DR,MAAO,SAAAH,GAAG,OAAID,EAAQC,KAEvBT,I,sQCtCf,IAAMqB,GAAavE,IAAH,MA6EDwE,GAjEF,WAAO,IAAD,EACyB7F,KAAnCC,EADU,EACVA,OAAQC,EADE,EACFA,UAAW4F,EADT,EACSA,aADT,EAG8BC,YAAgBC,IAAvDC,EAHS,EAGTA,SAAUC,EAHD,EAGCA,OAAgBC,EAHjB,EAGUjE,KAHV,EAIgB6D,YAAgBH,IAAzChI,EAJS,EAITA,QAAS6F,EAJA,EAIAA,MAAOvB,EAJP,EAIOA,KAExB,GAAItE,GAAWqI,EAAU,OAAO,yCAChC,GAAIxC,GAASyC,EAGX,OAFA7D,QAAQoB,MAAMA,GACdpB,QAAQoB,MAAMyC,GAEV,oCACCzC,EAAQ,kBAAC,GAAD,CAAOA,MAAOA,IAAa,kBAAC,GAAD,CAAOA,MAAOyC,KAKxD,IASME,EAAaD,GAAYA,EAASE,WAAyBF,EAASE,WARtDhD,QAAO,SAACiD,EAAOzD,GAC/B,OAAOyD,EAAQzD,EAAKI,WACpB,GAMoF,EAClFG,EAAO+C,GAAYA,EAASE,WAAaF,EAASE,WAAa,GACrEP,EAAaM,GACb,IAAMG,EAAgBnD,EAAKY,KAAK,SAAApB,GAC9B,IAAMC,EAAQX,EAAKsE,MAAMC,QAAO,SAAA5D,GAAI,OAAGA,EAAKtE,KAAOqE,EAAS8D,WAC5D,MAAO,CACLxD,WAAYN,EAASrE,GACrB0E,SAAUL,EAASK,SACnBJ,KAAMA,EAAK,OAMf,OACI,kBAAC,EAAD,CAAYtC,KAAMN,GAChB,gCACE,kBAAC,EAAD,CAAaxB,QApBA,WACnByB,GAAWD,IAmB+BuC,MAAM,SAA1C,QAGA,kBAAC,EAAD,kBACA,uCACY4D,EADZ,QAC4C,IAAfA,EAAmB,GAAK,IADrD,mBAIF,4BAAKG,EAAcvC,KACf,SAAApB,GAAQ,OAAI,kBAAC,GAAD,CAAUjD,IAAKiD,EAASM,WAAYN,SAAUA,QAC9D,gCACE,2BAAIG,EAAYI,GAAeoD,KAC9BH,EAAa,GACV,kBAAC,GAAD,CAAahD,KAAMmD,EAAe/B,MAAO4B,GACvC,kBAAC,EAAD,qBCjFT,SAASO,GAAgBhH,EAAKiH,GAAc,MAGXnF,oBAAS,WAC7C,IAEE,IAAMoB,EAAOgE,OAAOC,aAAaC,QAAQpH,GAEzC,OAAOkD,EAAOmE,KAAKC,MAAMpE,GAAQ+D,EACjC,MAAOnD,GAGP,OADApB,QAAQC,IAAImB,GACLmD,MAZsC,mBAG1CM,EAH0C,KAG7BC,EAH6B,KAiCjD,MAAO,CAACD,EAfS,SAAAE,GACf,IAEE,IAAMC,EACFD,aAAiBE,SAAWF,EAAMF,GAAeE,EAErDD,EAAeE,GAEfR,OAAOC,aAAaS,QAAQ5H,EAAKqH,KAAKQ,UAAUH,IAChD,MAAO5D,GAEPpB,QAAQC,IAAImB,M,i9BCtBlB,IAAM3F,GAAOC,IAAOC,GAAV,MAeJyJ,GAAe1J,IAAO2J,OAAV,MAEc,SAAA9I,GAAK,OAAIA,EAAMC,MAAMC,SAatB,SAAAF,GAAK,OAAIA,EAAMC,MAAME,aAI9CiH,GAAwB3E,IAAH,MAUrBsG,GAAcnG,IAAMoG,cAAc,MAC3B5H,GAAiB,kBAAM6H,qBAAWF,KA0BhCG,GAxBA,WAAO,IAAD,EACSnB,GAAgB,cAAc,GADvC,mBACZ1G,EADY,KACJC,EADI,OAEeyG,GAAgB,aAAa,GAF5C,mBAEZxG,EAFY,KAED2F,EAFC,KAGnB,OACI,kBAAC2B,GAAD,KACE,kBAACE,GAAYI,SAAb,CAAsBX,MAAO,CAC3BnH,SACAC,YACAC,YACA2F,iBAEA,yBAAK1H,UAAU,OACb,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAMiC,GAAG,KAAI,yBAAMhD,MAAM,QAAQM,IAAKqK,IAAQnK,IAAI,kBAEpD,kBAAC,EAAD,OAEF,kBAAC,GAAD,S,41BCtEV,IAAMgB,GAAQ,CACZO,IAAK,UACL6I,YAAY,UACZnJ,MAAO,UACPoJ,KAAM,UACNnJ,UAAW,UACXoJ,SAAU,UACVC,SAAU,SACVC,GAAI,qCAGAC,GAAavK,IAAOoB,IAAV,MAEL,SAAAP,GAAK,OAAIA,EAAMC,MAAMC,SAG1ByJ,GAAQxK,IAAOoB,IAAV,MACI,SAAAP,GAAK,OAAIA,EAAMC,MAAMuJ,YAKvBI,GAAcC,YAAH,KAuBX5J,GAAMC,OAkBJ4J,GAbF,SAAC,GAAgB,IAAfnE,EAAc,EAAdA,SAEb,OACI,kBAAC,IAAD,CAAe1F,MAAOA,IACpB,kBAACyJ,GAAD,KACE,kBAACE,GAAD,MACA,kBAAC,GAAD,MACA,kBAACD,GAAD,KAAQhE,M,maC3DlB,IAiBeoE,GAjBD5K,IAAO0C,GAAV,MAOO,SAAA7B,GAAK,OAAIA,EAAMC,MAAMoJ,e,ixBCPvC,IAqCeW,GArCF7K,IAAOoB,IAAV,MAEY,SAAAP,GAAK,OAAIA,EAAMC,MAAMsJ,YAC3B,SAAAvJ,GAAK,OAAIA,EAAMC,MAAMwJ,MAoBT,SAAAzJ,GAAK,OAAIA,EAAMC,MAAME,aAG/B,SAAAH,GAAK,OAAIA,EAAMC,MAAME,a,sSC1BvC,IAce8J,GAdE9K,IAAOkB,KAAV,MACE,SAAAL,GAAK,OAAIA,EAAMC,MAAMO,O,m7BCCrC,IAAM0J,GAA2BzH,IAAH,MAUxB0H,GAAuB1H,IAAH,MAYpB2H,GAAsB3H,IAAH,MAyEV4H,GA7DG,SAACrK,GAAU,MAEO4C,IAAMC,UAAS,GAFtB,mBAElByH,EAFkB,KAEPxH,EAFO,KAGjBnD,EAAOK,EAAPL,GAHiB,EAIJoD,YAAYqH,IAA1BG,EAJkB,sBAKLxH,YAAYoH,IAAzBK,EALkB,sBAMHC,YAASP,GAA0B,CACrD/G,UAAW,CAACxD,GAAIA,KADbkF,EANkB,EAMlBA,MAAOvB,EANW,EAMXA,KAIRoH,EAAW,uCAAG,gCAAAxH,EAAA,yDAChBJ,GAAW,GACN+B,GACDpB,QAAQoB,MAAMA,MAGZ8F,EAAoBrH,EAAKmE,aACLkD,EAAkBxF,OAAS,GAPrC,wBAQNyF,EAAUD,EAAkB,GAAGhL,GAC/B0E,EAAWsG,EAAkB,GAAGtG,SAT1B,SAUNkG,EAAW,CACbpH,UAAW,CACPyH,UACAvG,SAASA,EAAW,GAExBjB,eAAgB,CAAC,4BACjByH,OANa,SAMNC,EANM,GAOT,IADkB,EAAPxH,KAEP,OAAO,QAGhBD,MAAK,YAAY,EAAVC,KACNR,GAAW,MACZS,OAAM,SAAAwH,GACLtH,QAAQC,IAAI,iBAAkBqH,GAC9BjI,GAAW,MAzBH,gDA4BN0H,EAAU,CACRrH,UAAW,CACPxD,GAAIA,GACLyD,eAAgB,CAAC,4BACpByH,OAJQ,SAIDC,EAJC,GAKJ,IADkB,EAAPxH,KAEP,OAAO,QAGhBD,MAAK,YAAY,EAAVC,KACVR,GAAW,MACZS,OAAM,SAAAwH,GACLtH,QAAQC,IAAI,iBAAkBqH,GAC9BjI,GAAW,MAzCH,4CAAH,qDA6CjB,OACU,4BAAQG,SAAUqH,EAAWzK,QAAS6K,GAAtC,MACMJ,GAAa,MADnB,0BChDEN,GAtCH,SAAChK,GAAW,IAGbiE,EAASjE,EAATiE,KACR,OACI,kBAAC+G,GAAD,KACG/G,EAAKC,KAAO,yBAAKnF,IAAKkF,EAAKC,IAAKjF,IAAKgF,EAAKL,QAE3C,kBAAC,GAAD,KACE,kBAAC,IAAD,CACInC,GAAI,CACFwJ,SAAS,SAAD,OAAWhH,EAAKtE,MAG3BsE,EAAKL,QAGV,kBAAC,GAAD,KAAWO,EAAYF,EAAKG,QAC5B,sCAAYH,EAAKiH,MAAMvE,MACvB,2BAAI1C,EAAK2C,aAET,yBAAKpH,UAAU,cASb,kBAAC,GAAD,CAAWG,GAAIsE,EAAKtE,Q,4vBC7BhC,IAAMwL,GAAkB1I,IAAH,MAiBf2I,GAASjM,IAAOoB,IAAV,MAIN8K,GAAYlM,IAAOoB,IAAV,MAIA,SAAAP,GAAK,OAAIA,EAAMC,MAAMuJ,YAqCrB8B,GA7BF,WAAO,IAAD,EAEqBzI,oBAAS,GAF9B,mBAEV0I,EAFU,KAEGC,EAFH,KAGbC,EAAWC,cAEfC,qBAAU,WACRtF,KAAUG,OACVgF,GAAe,KACd,CAACC,IAEEF,GACJlF,KAAUC,QAXK,MAcgBa,YAAgBgE,IAAzCnM,EAdS,EAcTA,QAAS6F,EAdA,EAcAA,MAAOvB,EAdP,EAcOA,KAExB,OAAItE,EAAgB,yCAChB6F,GACFpB,QAAQoB,MAAMA,GACP,kBAAC,GAAD,CAAOA,MAAOA,KAIjB,kBAACuG,GAAD,KACM,kBAACC,GAAD,KAAY/H,EAAKsE,MAAMxC,KAAI,SAAAnB,GAAI,OAAI,kBAAC,GAAD,CAAMA,KAAMA,EAAMlD,IAAKkD,EAAKtE,W,k6BCxD7E,IAAMiM,GAAmBzM,IAAOoB,IAAV,MAGN,SAAAP,GAAK,OAAIA,EAAMC,MAAMwJ,MAgB/BoC,GAAiB1M,IAAOoB,IAAV,MAMduL,GAAoBrJ,IAAH,MAiDRsJ,GAjCI,WAAO,IACnBpM,EAAMqM,cAANrM,GADkB,EAEU8K,YAASqB,GAAmB,CAC3D3I,UAAW,CAACxD,GAAIA,KADVX,EAFe,EAEfA,QAAS6F,EAFM,EAENA,MAAOvB,EAFD,EAECA,KAIxB,GAAItE,EAAS,OAAO,yCACpB,GAAI6F,EAEF,OADApB,QAAQoB,MAAMA,GACP,kBAAC,GAAD,CAAOA,MAAOA,IAErB,IAAMvB,EAAK2I,YAAc,OAAO,gDAAsBtM,GACtD,IAAMsE,EAAOX,EAAK2I,YAElB,OACI,kBAACL,GAAD,KACE,kBAACM,GAAA,OAAD,KACE,+BAAQjI,EAAKL,QAEf,yBAAK7E,IAAKkF,EAAKC,IAAKjF,IAAKgF,EAAKL,QAC9B,yBAAKpE,UAAU,WACb,uCAAayE,EAAKL,OAClB,2BAAIK,EAAK2C,aACT,2BAAIzC,EAAYF,EAAKG,QACrB,kBAACyH,GAAD,KACA,qCAAW5H,EAAKiH,MAAMvE,MACtB,2BAAI1C,EAAKiH,MAAMtE,iB,qeCvE3B,IAAMuF,GAAahN,IAAO0C,GAAV,MAOE,SAAA7B,GAAK,OAAIA,EAAMC,MAAMO,OAUjC4L,GAAYjN,IAAOkN,EAAV,MA6BAC,GAxBD,SAACtM,GACb,IAAI6F,EAAUC,cACNoF,EAAUlL,EAAVkL,MACR,OACI,kBAACF,GAAD,KAEE,kBAACmB,GAAD,KACE,kBAAC,IAAD,CACI1K,GAAI,CACFwJ,SAAS,UAAD,OAAYC,EAAMvL,MAG7BuL,EAAMvE,OAGX,kBAACyF,GAAD,KAAYlB,EAAMtE,aAClB,yBAAKpH,UAAU,cACb,4BAAS+M,KAAK,SAAS1M,QAAS,WAAQgG,EAAQY,KAAR,iBAAuByE,EAAMvL,OAArE,iB,urBCrCV,IAAM6M,GAAmB/J,IAAH,MAahB2I,GAASjM,IAAOoB,IAAV,MAINkM,GAAatN,IAAOoB,IAAV,MAID,SAAAP,GAAK,OAAIA,EAAMC,MAAMuJ,YAsD9BkD,GAAa,kBACf,oGAGWC,GAjDD,WACZ,IAAI9G,EAAUC,cADI,EAGoBjD,oBAAS,GAH7B,mBAGX0I,EAHW,KAGEC,EAHF,KAIdC,EAAWC,cAEfC,qBAAU,WACRtF,KAAUG,OACVgF,GAAe,KACd,CAACC,IAEEF,GACJlF,KAAUC,QAZM,MAeemE,YAAS+B,IAAlCxN,EAfU,EAeVA,QAAS6F,EAfC,EAeDA,MAAOvB,EAfN,EAeMA,KAExB,OAAItE,EAAgB,yCAChB6F,GACFpB,QAAQoB,MAAMA,GACP,wCAGJvB,EAAKsJ,YAAetJ,EAAKsJ,WAAWzH,OAYrC,kBAAC,GAAD,KACE,gDACA,kBAAC,GAAD,MACA,4BAAQoH,KAAK,SACL1M,QAAS,WAAQgG,EAAQY,KAAK,kBADtC,wBAEA,kBAACgG,GAAD,KAAanJ,EAAKsJ,WAAWxH,KAAI,SAAAwH,GAAU,OAAI,kBAAC,GAAD,CAAO1B,MAAO0B,EAAW1B,MAAOnK,IAAK6L,EAAW1B,MAAMvL,UAfrG,kBAAC,GAAD,KACE,yFACA,kBAAC,GAAD,MACA,4BAAQ4M,KAAK,SACL1M,QAAS,WAAQgG,EAAQY,KAAK,kBADtC,sB,28BClDV,IAAMoG,GAAqBpK,IAAH,MA0ElBqK,GAAc,SAAC,GAAa,IAAZ5B,EAAW,EAAXA,MAChBrF,EAAUC,cACd,OACI,kBAACiH,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,4BAAKhC,EAAMvE,MACX,2BAAIuE,EAAMtE,aACV,4BAAQ2F,KAAK,SACL1M,QAAS,WAAQgG,EAAQY,KAAR,iBAAuByE,EAAMvL,GAA7B,kBADzB,sBAKN,kBAACqN,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAKE,IAAI,GACP,kBAACC,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKC,KAAN,KACE,kBAACD,GAAA,EAAKrD,MAAN,kBAAuBmB,EAAMoC,gBAAgBC,UAAU7M,OACvD,kBAAC0M,GAAA,EAAKI,SAAN,CAAehO,UAAU,mBAAzB,+BAGA,kBAACiO,GAAA,EAAD,KACGvC,EAAMtD,MAAMxC,KAAI,SAAAnB,GAAI,OAAI,kBAACwJ,GAAA,EAAUzD,KAAX,CAAgBjJ,IAAKkD,EAAKtE,GAAI+N,SAAUzJ,EAAKtE,GAAIE,QAAS,WAAQgG,EAAQY,KAAR,gBAAsBxC,EAAKtE,OAA7F,IAAwGsE,EAAKL,MAA7G,UAG7B,kBAACwJ,GAAA,EAAKO,OAAN,CAAanO,UAAU,cAAvB,2CAKJ,kBAACyN,GAAA,EAAD,CAAKE,IAAI,GACP,kBAACC,GAAA,EAAD,KACE,kBAACA,GAAA,EAAKC,KAAN,KACE,kBAACD,GAAA,EAAKrD,MAAN,kBAAuBmB,EAAM0C,sBAAsBL,UAAU7M,OAE7D,kBAAC0M,GAAA,EAAKI,SAAN,CAAehO,UAAU,mBAAzB,eACe2E,EAAY+G,EAAM2C,YAAYpJ,QAAQ,SAACiD,EAAOzD,GAAR,OAAgByD,EAAMzD,EAAKG,QAAO,KAEvF,kBAACqJ,GAAA,EAAD,KAEGvC,EAAM2C,YAAYzI,KAAI,SAAA0I,GAAK,OAAI,kBAACL,GAAA,EAAUzD,KAAX,CAAgBjJ,IAAK+M,EAAMnO,GAAI+N,SAAUI,EAAMnO,IAA/C,IAAqD,gCAAMmO,EAAMlK,MAAZ,WAA2BkK,EAAMzJ,SAAjC,MAArD,KAAwG,qCAAWF,EAAY2J,EAAM1J,cAGzK,kBAACgJ,GAAA,EAAKO,OAAN,CAAanO,UAAU,cAAvB,+CAaCuO,GA3FK,WAAO,IACpBpO,EAAMqM,cAANrM,GADmB,EAEO8K,YAASoC,GAAoB,CAC1D1J,UAAW,CAACxD,GAAIA,KADXX,EAFiB,EAEjBA,QAAS6F,EAFQ,EAERA,MAAOvB,EAFC,EAEDA,KAIvB,GAAKtE,EAAU,OAAO,yCACtB,GAAK6F,EAEH,OADApB,QAAQoB,MAAMA,GACP,kBAAC,GAAD,CAAOA,MAAOA,IAEvB,IAAMvB,EAAK0K,aAAe,OAAO,iDAAuBrO,GAExD,IAIMuL,EAAQ5H,EAAK0K,aAEnB,OACI,kBAACjB,GAAA,EAAD,CAAW3O,MAPQ,CACrB6P,UAAW,SAOL,kBAAC/B,GAAA,OAAD,KACE,+BAAQhB,EAAMvE,OAEd,kBAACqG,GAAA,EAAD,KACA,kBAACC,GAAA,EAAD,CAAKiB,GAAI,GAAIf,GAAI,EAAGgB,GAAI,EAAGC,GAAI,EAAGC,GAAI,IACpC,kBAAC,GAAD,CAAanD,MAAOA,Q,+0CChFlC,IAAMlM,GAAUsP,YAAH,MAkEEC,GAtDFpP,IAAOqP,KAAV,MAqBY,SAAAxO,GAAK,OAAIA,EAAMC,MAAMO,MA4BxBxB,I,kwBCtDnB,IAAMyP,GAAwBhM,IAAH,MA8GZiM,GAvFK,WAAO,IAAD,EAES9L,IAAMC,SAAS,CAAE8D,KAAM,GAAIC,YAAa,KAFjD,mBAEjB+H,EAFiB,KAEPC,EAFO,OAGMhM,IAAMC,UAAS,GAHrB,mBAGjB7D,EAHiB,KAGR8D,EAHQ,OAIEF,IAAMC,SAAS,MAJjB,mBAIjBgC,EAJiB,KAIVgK,EAJU,KAKlBC,EAAe,SAAA/D,GAAM,IAAD,EACAA,EAAEgE,OAAlBpI,EADgB,EAChBA,KAAM6B,EADU,EACVA,MACdoG,GAAY,SAAAI,GAAS,O,4WAAA,IAChBA,EADgB,gBAElBrI,EAAO6B,QAKR3C,EAAUC,cAdU,EAeF/C,YAAY0L,IAA3BQ,EAfiB,oBAgBxB,OACI,kBAAC,GAAD,CACI3J,YAAU,OACV4J,SAAQ,uCAAE,WAAMnE,GAAN,iBAAA7H,EAAA,6DACRJ,GAAW,GAEXiI,EAAEoE,iBACMxI,EAAuBgI,EAAvBhI,KAAMC,EAAiB+H,EAAjB/H,YAJN,SAMFqI,EAAY,CAChB9L,UAAW,CACTwD,KAAMA,EACNC,YAAaA,GAEfiE,OALgB,SAKTC,EALS,GAKO,IAARxH,EAAO,EAAPA,KACb,IAAKA,EACH,OAAO,KAET,IAAM8L,EAAoBtE,EAAMuE,UAAU,CAACC,MAAO9C,KAC5C+C,EAAiBH,EAAoBA,EAAkBxC,WAAa,GACpE4C,EAAWlM,EAAKmM,kBAAkBC,UAAU,GAClD5E,EAAM6E,WAAW,CACfL,MAAO9C,GACPlJ,KAAM,CAACsJ,WAAW,CAAE4C,EAAStE,OAAZ,oBAAsBqE,UAG1ClM,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACRsL,EAAY,CAACjI,KAAK,GAAIC,YAAY,KAClC9D,GAAW,GACX,IAAM0M,EAAWlM,EAAKmM,kBAAkBC,UAAU,GAClD7J,EAAQY,KAAR,iBAAuB+I,EAAStE,MAAMvL,QACrC4D,OAAM,SAAAwH,GACPtH,QAAQC,IAAI,iBAAkBqH,GAC9B8D,EAAS9D,GACTjI,GAAW,MA/BL,2CAAF,uDAmCV,kBAAC,GAAD,CAAO+B,MAAOA,IACd,8BAAU5B,SAAUjE,EAAS4Q,YAAW5Q,GACtC,2BAAO6Q,QAAQ,QAAf,gBAEE,2BACItD,KAAK,OACL5M,GAAG,OACHgH,KAAK,OACLmJ,YAAY,OACZC,UAAQ,EACRvH,MAAOmG,EAAShI,KAChBqJ,SAAUlB,KAKhB,2BAAOe,QAAQ,eAAf,cAEE,8BACIlQ,GAAG,cACHgH,KAAK,cACLmJ,YAAY,sBACZC,UAAQ,EACRvH,MAAOmG,EAAS/H,YAChBoJ,SAAUlB,KAGhB,4BAAQvC,KAAK,UAAb,a,01CCzGV,IAAM0D,GAAuBxN,IAAH,MAkKXyN,GAzHI,WAAO,IACnBC,EAAWnE,cAAXmE,QADkB,EAEQvN,IAAMC,SAAS,CAAEe,MAAO,GAAIgD,YAAa,GAAIC,MAAO,GAAIzC,MAAO,IAFvE,mBAEhBgM,EAFgB,KAEPC,EAFO,OAGOzN,IAAMC,UAAS,GAHtB,mBAGhB7D,EAHgB,KAGP8D,EAHO,OAIGF,IAAMC,SAAS,MAJlB,mBAIhBgC,EAJgB,KAITgK,EAJS,KAKjBC,EAAe,SAAA/D,GAAM,IAAD,EACMA,EAAEgE,OAAxBpI,EADgB,EAChBA,KAAM4F,EADU,EACVA,KAAM/D,EADI,EACJA,MACd8H,EAAe,WAAT/D,EAhBI,SAAC/D,GACnB,IACE,IAAM+H,EAAUC,WAAWhI,GAC3B,OAAOiI,OAAOC,MAAMH,GAAS,GAAKA,EAClC,MAAOxF,GACP,OAAO,GAWyB4F,CAAYnI,GAASA,EACrD6H,GAAW,SAAArB,GAAS,aACfA,EADe,gBAEjBrI,EAAO2J,QAINM,EAAU,uCAAG,WAAM7F,GAAN,qBAAA7H,EAAA,6DACX2N,EAAQ9F,EAAEgE,OAAO8B,OACjBvN,EAAO,IAAIwN,UACZC,OAAO,OAAQF,EAAM,IAC1BvN,EAAKyN,OAAO,gBAAiB,UAJZ,SAMCC,MAAM,wDAAyD,CAC/EC,OAAQ,OACRC,KAAM5N,IARS,cAMX8C,EANW,gBAUEA,EAAI+K,OAVN,OAUXC,EAVW,OAWjBf,GAAW,SAAArB,GAAS,aACfA,EADe,CAElBnI,MAAOuK,EAAKC,gBAbG,4CAAH,sDAgBZxL,EAAUC,cA9BS,EA+BF/C,YAAYkN,IAA1BqB,EA/BgB,oBAgCrB,OACU,kBAAC,GAAD,CACIhM,YAAU,OACV4J,SAAQ,uCAAE,WAAMnE,GAAN,qBAAA7H,EAAA,6DACRJ,GAAW,GAEXiI,EAAEoE,iBACMvL,EAAsCwM,EAAtCxM,MAAOgD,EAA+BwJ,EAA/BxJ,YAAaxC,EAAkBgM,EAAlBhM,MAAOyC,EAAWuJ,EAAXvJ,MAJ3B,SAMDyK,EAAW,CAChBnO,UAAW,CACTS,MAAOA,EACPgD,YAAaA,EACbxC,MAAe,IAARA,EACPyC,MAAOA,EACP0K,SAAUpB,KAEV9M,MAAK,YAAa,IAAXC,EAAU,EAAVA,KACP+M,EAAW,CAACzM,MAAM,GAAIgD,YAAY,GAAIxC,MAAM,EAAGyC,MAAM,KACrD/D,GAAW,GACX,IAAM0O,EAAUlO,EAAKmO,aAAa/B,UAAU,GAC5C7J,EAAQY,KAAR,gBAAsB+K,EAAQ7R,QAC/B4D,OAAM,SAAAwH,GACPtH,QAAQC,IAAI,iBAAkBqH,GAC9B8D,EAAS9D,GACTjI,GAAW,MAtBL,2CAAF,uDA0BV,kBAAC,GAAD,CAAO+B,MAAOA,IACd,8BAAU5B,SAAUjE,EAAS4Q,YAAW5Q,GACtC,2BAAO6Q,QAAQ,QAAf,QAEE,2BACItD,KAAK,OACL5M,GAAG,OACHgH,KAAK,OACLmJ,YAAY,kBACZC,UAAQ,EACRC,SAAUY,IAEbR,EAAQvJ,OACL,yBAAKpI,MAAM,MAAMM,IAAKqR,EAAQvJ,MAAO5H,IAAI,oBAI/C,2BAAO4Q,QAAQ,SAAf,QAEE,2BACItD,KAAK,OACL5M,GAAG,QACHgH,KAAK,QACLmJ,YAAY,QACZC,UAAQ,EACRvH,MAAO4H,EAAQxM,MACfoM,SAAUlB,KAIhB,2BAAOe,QAAQ,SAAf,QAEE,2BACItD,KAAK,SACL5M,GAAG,QACHgH,KAAK,QACLmJ,YAAY,QACZC,UAAQ,EACRvH,MAAO4H,EAAQhM,MACf4L,SAAUlB,KAIhB,2BAAOe,QAAQ,eAAf,cAEE,8BACIlQ,GAAG,cACHgH,KAAK,cACLmJ,YAAY,sBACZC,UAAQ,EACRvH,MAAO4H,EAAQxJ,YACfoJ,SAAUlB,KAGhB,4BAAQvC,KAAK,UAAb,a,0uBClKlB,IAkCemF,GAlCKvS,IAAOoB,IAAV,MAGK,SAAAP,GAAK,OAAIA,EAAMC,MAAMsJ,YAC3B,SAAAvJ,GAAK,OAAIA,EAAMC,MAAMwJ,MAON,SAAAzJ,GAAK,OAAIA,EAAMC,MAAMsJ,YAUrB,SAAAvJ,GAAK,OAAIA,EAAMC,MAAMsJ,Y,qfCdpD,IAAMoI,GAAqBlP,IAAH,MAkFTmP,GA5DK,WAAO,IACpBjS,EAAMqM,cAANrM,GADmB,EAES8K,YAASkH,GAAoB,CAC5DxO,UAAW,CAACxD,GAAIA,KADVX,EAFgB,EAEhBA,QAAS6F,EAFO,EAEPA,MAAOvB,EAFA,EAEAA,KAIxB,GAAItE,EAAS,OAAO,yCACpB,GAAI6F,EAEF,OADApB,QAAQoB,MAAMA,GACP,kBAAC,GAAD,CAAOA,MAAOA,IAGvB,IAAMvB,EAAKuO,aAAe,OAAO,iDAAuBlS,GACxD,IAAMmO,EAAQxK,EAAKuO,aACnB,OACI,kBAAC,GAAD,CAAavM,YAAU,SACrB,kBAAC4G,GAAA,OAAD,KACE,iDAAuBvM,IAEzB,2BACE,2CACA,8BAAOA,IAET,2BACE,wCACA,8BAAOmO,EAAMgE,SAEf,2BACE,sCACA,8BAAOhE,EAAMiE,aAEf,2BACE,6CACA,8BAAO5N,EAAY2J,EAAMlI,SAE3B,2BACE,4CACA,8BAAOkI,EAAMD,YAAY1I,SAE3B,yBAAK3F,UAAU,SACZsO,EAAMD,YAAYzI,KAAI,SAAAnB,GAAI,OACvB,yBAAKzE,UAAU,aAAauB,IAAKkD,EAAKtE,IACpC,yBAAKZ,IAAKkF,EAAKC,IAAKjF,IAAKgF,EAAKL,QAC9B,yBAAKpE,UAAU,gBACb,4BAAKyE,EAAKL,OACV,mCAASK,EAAKI,UACd,oCAAUF,EAAYF,EAAKG,QAC3B,wCAAcD,EAAYF,EAAKG,MAAQH,EAAKI,WAC5C,2BAAIJ,EAAK2C,qB,01BC7E3B,IAyCeoL,GAzCS7S,IAAO2E,GAAV,MACL,SAAA9D,GAAK,OAAIA,EAAMC,MAAMwJ,MAGf,SAAAzJ,GAAK,OAAIA,EAAMC,MAAMsJ,Y,ikBCK3C,IAAM0I,GAAmBxP,IAAH,MAkBhByP,GAAU/S,IAAOY,GAAV,MAsDEoS,GAhDA,WAAO,IAAD,EAEmBtP,oBAAS,GAF5B,mBAEZ0I,EAFY,KAECC,EAFD,KAGfC,EAAWC,cAEfC,qBAAU,WACRtF,KAAUG,OACVgF,GAAe,KACd,CAACC,IAEEF,GACJlF,KAAUC,QAXO,MAcca,YAAgB8K,IAAzCjT,EAdW,EAcXA,QAAS6F,EAdE,EAcFA,MAAOvB,EAdL,EAcKA,KACxB,GAAItE,EAAS,OAAO,yCACpB,GAAI6F,EAEF,OADApB,QAAQoB,MAAMA,GACP,kBAAC,GAAD,CAAOA,MAAOA,IAGvB,IAAMuN,EAAS9O,EAAK8O,OACpB,OACI,6BACE,wCAAcA,EAAOjN,OAArB,WACA,kBAAC+M,GAAD,KACGE,EAAOhN,KAAI,SAAA0I,GAAK,OACb,kBAAC,GAAD,CAAiB/M,IAAK+M,EAAMnO,IAC1B,kBAAC,IAAD,CACI8B,GAAI,CAACwJ,SAAS,UAAD,OAAY6C,EAAMnO,MAC/B,yBAAKH,UAAU,cACb,2BAAIsO,EAAMD,YAAYpJ,QAAO,SAACvB,EAAGmP,GAAJ,OAAUnP,EAAImP,EAAEhO,WAAU,GAAvD,UACA,2BAAIyJ,EAAMD,YAAY1I,OAAtB,aACA,2BAAIhB,EAAY2J,EAAMlI,SAExB,yBAAKpG,UAAU,UACZsO,EAAMD,YAAYzI,KAAI,SAAAnB,GAAI,OACvB,yBAAKlD,IAAKkD,EAAKtE,GAAIZ,IAAKkF,EAAKC,IAAKjF,IAAKgF,EAAKL,oBCGvD0O,GAtCH,SAAC,GAAe,IAAdvM,EAAa,EAAbA,QACL/G,EAAWM,KAAXN,QAEDuT,EApBmB,SAACxM,GAC1B,OAAO,IAAIyM,KAAa,CACtBC,KAAM,IAAIC,KAAc,CACtBC,IAAKhV,iCACLuE,QAAS,CACP0Q,WAAW,EACXC,iBAAkB,CAChBC,QAAS,CACPC,cAAc,UAAD,OAAYhN,QAKjC+E,MAAO,IAAIkI,OAOEC,CAAmBlN,GAClC,OAAK/G,EACI,kBAAC,EAAD,MAGL,kBAAC,KAAD,CAAgBuT,OAAQA,GACtB,kBAAC,IAAD,KACE,kBAAC,GAAD,KACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,KAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YAAYC,UAAWrH,KACnC,kBAAC,IAAD,CAAOoH,KAAK,eAAeC,UAAW1E,KACtC,kBAAC,IAAD,CAAOyE,KAAK,6BAA6BC,UAAWlD,KACpD,kBAAC,IAAD,CAAOiD,KAAK,aAAaC,UAAWrF,KACpC,kBAAC,IAAD,CAAOoF,KAAK,aAAaC,UAAWxB,WCzDpDyB,SAAUnV,OAAST,EAAYS,OAG/B,IAGaoV,GAAiB1Q,IAAMoG,cAAc,MACrC1J,GAAa,kBAAM2J,qBAAWqK,KAE9BC,GAAkB,SAAC,GAIO,IAHL5N,EAGI,EAHJA,SAEG6N,GACC,EAFJC,mBAEI,oDACU5Q,oBAAS,GADnB,mBAC7B6Q,EAD6B,KACZC,EADY,OAEZ9Q,qBAFY,mBAE7B+Q,EAF6B,KAEvBC,EAFuB,OAGAhR,qBAHA,mBAG7BiR,EAH6B,KAGdC,EAHc,OAINlR,oBAAS,GAJH,mBAI7B7D,EAJ6B,KAIpB8D,EAJoB,OAKND,mBAAS,IALH,mBAK7BkD,EAL6B,KAKpBiO,EALoB,KAOpCrI,qBAAU,WACR,IAAMsI,EAAW,uCAAG,kCAAA/Q,EAAA,sEACY,IAAIgR,IAAYV,GAD5B,cACZW,EADY,QAEFC,YAAc,CAC5BC,UAAU,WAAD,4BAAE,WAAOpP,GAAP,eAAA/B,EAAA,6DACTO,QAAQC,IAAI,sBADH,SAEH4Q,EAAuBrP,GAFpB,uBAGqBkP,EAAgBI,iBAHrC,OAGHC,EAHG,OAITX,EAAQW,GAJC,2CAAF,mDAAC,GAMVC,UAAW,SAACjR,GACVC,QAAQoB,MAAM,yBAA0BrB,KAI5CuQ,EAAWI,GAdO,SAeYA,EAAgBO,iBAf5B,YAeZhB,EAfY,0CAkBGS,EAAgBI,iBAlBnB,eAkBVX,EAlBU,OAmBhBC,EAAQD,GACRD,EAAmBD,GApBH,UAqBMS,EAAgBQ,uBArBtB,QAqBVC,EArBU,OAsBhBZ,EAAWY,EAAQC,aAAaC,eAtBhB,iCAwBXX,GAxBW,4CAAH,qDA0BXY,EAAS9M,OAAOwD,SAASuJ,KAC/Bf,IAAc5Q,KAAd,uCAAmB,WAAO4R,GAAP,SAAA/R,EAAA,sEACX+R,EAAQC,wBAAwBH,GADrB,OAEZE,EAAQP,kBACXf,GAAmB,GAErB7Q,GAAW,GALM,2CAAnB,yDAQC,IAGH,IAAMwR,EAAsB,uCAAG,WAAOM,GAAP,eAAA1R,EAAA,6DACzB0R,IACI7O,EAAU6O,EAAQC,aACxBb,EAAWjO,EAAQ+O,gBAErBnB,GAAmB,GALU,kBAMtB,MANsB,2CAAH,sDAQ5B,OAAI3U,EACM,kBAAC,EAAD,MAGL0U,EAgBDA,GAAmBE,EAAO,kBAACN,GAAenK,SAAhB,CACtBX,MAAO,CACLkL,kBACA3N,UACA6N,OACA5U,UACAO,kBAAmB,kBAAMuU,EAAcqB,cACvC3T,OAAQ,kBAAOsS,EAAcsB,aAGhCzP,EACD,kBAAC,GAAD,CAAKI,QAASA,KACa,kBAAC,EAAD,MA1B3B,kBAACuN,GAAenK,SAAhB,CACIX,MAAO,CACLkL,kBACAE,OACA5U,UACAO,kBAAmB,kBAAMuU,EAAcqB,cACvC3T,OAAQ,kBAAOsS,EAAcsB,aAGjC,kBAAC,EAAD,MATF,OCxEF3B,GAAqB,SAAA4B,GACzBxP,EAAQY,KACN4O,GAAYA,EAASC,UACjBD,EAASC,UACTrN,OAAOwD,SAASR,WAIlBsK,GACJ,kBAAC,IAAD,CAAQ1P,QAASA,GACf,kBAAC,IAAD,CACEsN,KAAK,IACLqC,OAAQ,SAAAxV,GAAK,OACX,kBAAC,GAAD,CACIyV,aAAchY,EAAYC,OAC1BgY,SAAUjY,EAAYG,SACtBK,WAAYR,EAAYQ,WACxB0X,kBAAmBlY,EAAYK,YAC/B8X,iBAAkBnY,EAAYO,YAC9B6X,mBAAoBpY,EAAYM,WAChC0V,mBAAoBA,SAOhCqC,IAASN,OAAOD,GAAYQ,SAASC,eAAe,U,sCCrCpDC,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.ee0b2a03.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","export const AUTH_CONFIG = {\n  domain: process.env.REACT_APP_DOMAIN || 'mazada.auth.us-west-2.amazoncognito.com',\n  clientId: process.env.REACT_APP_CLIENT_ID || '3kl7hui7a7p7f9tc5qvpn9pupj',\n  responseType: 'token',\n  redirectUri: process.env.REACT_APP_BASE_URL  || 'http://localhost:3000',\n  signoutUri: process.env.REACT_APP_BASE_URL|| 'http://localhost:3000',\n  tokenScopes: [\n    \"openid\",\n    \"email\",\n    \"profile\"\n  ],\n  UserPoolId: process.env.REACT_APP_USER_POOL_ID || \"us-west-2_9np3c0hBN\",\n  region: process.env.REACT_APP_REGION || \"us-west-2\",\n};\n","import React from \"react\";\nimport loading from \"./loading.svg\";\n\nconst Loading = () => {\n  const style = {\n    position: \"absolute\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    height: \"100vh\",\n    width: \"100vw\",\n    top: 0,\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: \"white\"\n  };\n\n  return (\n    <div style={style}>\n      <img src={loading} alt=\"loading\" />\n    </div>\n  );\n};\n\nexport default Loading;\n","import React from \"react\";\nimport { useCognito } from \"./react-cognito-spa\";\nimport Cover from \"../../images/cover.png\";\nimport { Button } from \"react-bootstrap\";\nimport styled from 'styled-components';\n\nconst Logo = styled.h1`\n  font-size: 4rem;\n  margin-left: 2rem;\n  position: relative;\n  z-index: 2;\n  transform: skew(-7deg);\n  a {\n    padding: 0.5rem 1rem;\n  }\n  @media (max-width: 1300px) {\n    margin: 0;\n    text-align: center;\n  }\n`;\n\n\nconst Login = () => {\n  const { loading, loginWithRedirect } = useCognito();\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div className=\"overlay\">\n      <div className=\"overlay-content\">\n        <div className=\"overlay-heading\">\n          <Logo>\n          <img width=\"300px\" src={Cover} alt=\"Mazada Logo\"/>\n          </Logo>\n          Welcome to the Mazada Shopping app\n        </div>\n        <div className=\"overlay-message\">Please login to continue</div>\n        <div className=\"overlay-action\">\n          <Button\n            id=\"qsLoginBtn\"\n            variant=\"primary\"\n            className=\"btn-margin loginBtn\"\n            onClick={() => {\n              loginWithRedirect({});\n            }}\n          >\n            Log In\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import styled from 'styled-components';\n\nconst NavStyles = styled.ul`\n  margin: 0;\n  padding: 0;\n  display: flex;\n  justify-self: end;\n  font-size: 2rem;\n  a,\n  button {\n    padding: 1rem 3rem;\n    display: flex;\n    align-items: center;\n    position: relative;\n    text-transform: uppercase;\n    font-weight: 900;\n    font-size: 1em;\n    background: none;\n    border: 0;\n    cursor: pointer;\n    color: ${props => props.theme.black};\n    font-weight: 800;\n    @media (max-width: 700px) {\n      font-size: 10px;\n      padding: 0 10px;\n    }\n    &:before {\n      content: '';\n      width: 2px;\n      background: ${props => props.theme.lightgrey};\n      height: 100%;\n      left: 0;\n      position: absolute;\n      transform: skew(-20deg);\n      top: 0;\n      bottom: 0;\n    }\n    &:after {\n      height: 2px;\n      background: red;\n      content: '';\n      width: 0;\n      position: absolute;\n      transform: translateX(-50%);\n      transition: width 0.4s;\n      transition-timing-function: cubic-bezier(1, -0.65, 0, 2.31);\n      left: 50%;\n      margin-top: 2rem;\n    }\n    &:hover,\n    &:focus {\n      outline: none;\n      &:after {\n        width: calc(100% - 60px);\n      }\n    }\n  }\n  @media (max-width: 1300px) {\n    border-top: 1px solid ${props => props.theme.lightgrey};\n    width: 100%;\n    justify-content: center;\n    font-size: 1.5rem;\n  }\n`;\n\nexport default NavStyles;\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport styled from 'styled-components';\n\nconst AnimationStyles = styled.span`\n  position: relative;\n  .count {\n    display: block;\n    position: relative;\n    transition: all 0.4s;\n    backface-visibility: hidden;\n  }\n  /* Initial State of the entered Dot */\n  .count-enter {\n    transform: scale(4) rotateX(0.5turn);\n  }\n  .count-enter-active {\n    transform: rotateX(0);\n  }\n  .count-exit {\n    top: 0;\n    position: absolute;\n    transform: rotateX(0);\n  }\n  .count-exit-active {\n    transform: scale(4) rotateX(0.5turn);\n  }\n`;\n\nconst Dot = styled.div`\n  background: ${props => props.theme.red};\n  color: white;\n  border-radius: 50%;\n  padding: 0.5rem;\n  line-height: 2rem;\n  min-width: 3rem;\n  margin-left: 1rem;\n  font-weight: 100;\n  font-feature-settings: 'tnum';\n  font-variant-numeric: tabular-nums;\n`;\n\nconst CartCount = ({ count }) => (\n    <AnimationStyles>\n      <TransitionGroup>\n        <CSSTransition\n            unmountOnExit\n            className=\"count\"\n            classNames=\"count\"\n            key={count}\n            timeout={{ enter: 400, exit: 400 }}\n        >\n          <Dot>{count}</Dot>\n        </CSSTransition>\n      </TransitionGroup>\n    </AnimationStyles>\n);\n\n\nexport default CartCount;\n","import React from 'react';\nimport NavStyles from './styles/NavStyles';\nimport {Link} from 'react-router-dom';\nimport {useCognito} from './Cognito/react-cognito-spa';\nimport {useCartContext} from './Header';\nimport CartCount from './CartCount';\n\nconst Nav = () => {\n  const {isOpen, setIsOpen, cartCount} = useCartContext();\n  \n  const handleToggle = () => {\n    setIsOpen(!isOpen)\n  };\n  const { logout } = useCognito();\n  \n  return (\n      <NavStyles>\n        <Link to=\"/shop\">\n          Shop\n        </Link>\n        <Link to=\"/sell\">\n          Sell\n        </Link>\n        <Link to=\"/orders\">\n          Orders\n        </Link>\n        <>\n          <button onClick={handleToggle}>\n            My Cart <CartCount count={cartCount} />\n          </button>\n        </>\n        <Link onClick={logout} to=\"/\">\n          Logout\n        </Link>\n      </NavStyles>\n  );\n};\n\nexport default Nav;\n","import styled from 'styled-components';\n\nconst CartStyles = styled.div`\n  padding: 20px;\n  position: relative;\n  background: white;\n  position: fixed;\n  height: 100%;\n  top: 0;\n  right: 0;\n  width: 40%;\n  min-width: 500px;\n  bottom: 0;\n  transform: translateX(100%);\n  transition: all 0.3s;\n  box-shadow: 0 0 10px 3px rgba(0, 0, 0, 0.2);\n  z-index: 5;\n  display: grid;\n  grid-template-rows: auto 1fr auto;\n  ${props => props.open && `transform: translateX(0);`};\n  header {\n    border-bottom: 5px solid ${props => props.theme.black};\n    margin-bottom: 2rem;\n    padding-bottom: 2rem;\n  }\n  footer {\n    border-top: 10px double ${props => props.theme.black};\n    margin-top: 2rem;\n    padding-top: 2rem;\n    display: grid;\n    grid-template-columns: auto auto;\n    align-items: center;\n    font-size: 3rem;\n    font-weight: 900;\n    p {\n      margin: 0;\n    }\n  }\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n    overflow: scroll;\n  }\n  @media (max-width: 600px) {\n    width: 100%;\n    min-width: 300px;\n    footer {\n      p {\n        font-size: 2rem;\n      }\n    }\n      /* OR, change value to 'none' */\n  }\n`;\n\nexport default CartStyles;\n","import styled from 'styled-components';\n\nconst Supreme = styled.h3`\n  background: ${props => props.theme.red};\n  color: white;\n  display: inline-block;\n  padding: 4px 5px;\n  transform: skew(-3deg);\n  margin: 0;\n  font-size: 4rem;\n`;\n\nexport default Supreme;\n","import styled from 'styled-components';\n\nconst CloseButton = styled.button`\n  background: black;\n  color: white;\n  font-size: 3rem;\n  border: 0;\n  position: absolute;\n  z-index: 2;\n  right: 0;\n`;\n\nexport default CloseButton;\n","import styled from 'styled-components';\n\nconst SickButton = styled.button`\n  background: #e49150;\n  color: white;\n  font-weight: 500;\n  border: 0;\n  border-radius: 0;\n  text-transform: uppercase;\n  font-size: 2rem;\n  padding: 0.8rem 1.5rem;\n  transform: skew(-2deg);\n  display: inline-block;\n  transition: all 0.5s;\n  &[disabled] {\n    opacity: 0.5;\n  }\n`;\n\nexport default SickButton;\n","export default function(amount) {\n  const options = {\n    style: 'currency',\n    currency: 'MYR',\n    minimumFractionDigits: 2,\n  };\n  // if its a whole, dollar amount, leave off the .00\n  if (amount % 100 === 0) options.minimumFractionDigits = 0;\n  const formatter = new Intl.NumberFormat('en-US', options);\n  return formatter.format(amount / 100);\n}\n","import React from 'react';\nimport {useMutation} from '@apollo/react-hooks';\nimport styled from 'styled-components';\nimport gql from 'graphql-tag';\n\nconst DELETE_CURRENT_ITEM_IN_CART = gql`\n    mutation DELETE_CURRENT_ITEM_IN_CART($id: uuid!) {\n        delete_cart_items(where: {id: {_eq: $id}}) {\n            affected_rows\n        }\n    }\n`;\n\nconst BigButton = styled.button`\n  font-size: 3rem;\n  background: none;\n  border: 0;\n  &:hover {\n    color: ${props => props.theme.red};\n    cursor: pointer;\n  }\n`;\n\nconst RemoveFromCart =({id}) => {\n  const [loading, setLoading] = React.useState(false);\n  \n  const [removeFromCart] = useMutation(DELETE_CURRENT_ITEM_IN_CART);\n  \n\n  return (\n            <BigButton\n                disabled={loading}\n                onClick={async () => {\n                  setLoading(true);\n                  await removeFromCart({\n                    variables: {id: id},\n                    refetchQueries: [\"GET_CURRENT_ITEM_IN_CART\"],\n                  }).then(({data}) => {\n                    setLoading(false)\n                  }).catch(err => {\n                    console.log(err.message);\n                    setLoading(false)\n                  });\n                }}\n                title=\"Delete Item\"\n            >\n              &times;\n            </BigButton>\n\n    );\n}\n\nexport default RemoveFromCart;\nexport { DELETE_CURRENT_ITEM_IN_CART };\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport formatMoney from '../lib/formatMoney';\nimport RemoveFromCart from './RemoveFromCart';\n\nconst CartItemStyles = styled.li`\n  padding: 1rem 0;\n  border-bottom: 1px solid ${props => props.theme.lightgrey};\n  display: grid;\n  align-items: center;\n  grid-template-columns: auto 1fr auto;\n  img {\n    margin-right: 10px;\n  }\n  h3,\n  p {\n    margin: 0;\n  }\n`;\n\nconst CartItem = ({ cartItem }) => {\n\n  const item = cartItem.item;\n  if (!item)\n    return (\n        <CartItemStyles>\n          <p>This Item has been removed</p>\n          <RemoveFromCart id={cartItem.cartItemId} />\n        </CartItemStyles>\n    );\n  return (\n      <CartItemStyles>\n        <img width=\"100\" src={item.img} alt={item.title} />\n        <div className=\"cart-item-details\">\n          <h3>{item.title}</h3>\n          <p>\n            {formatMoney(item.price * cartItem.quantity)}\n            {' - '}\n            <em>\n              {cartItem.quantity} &times; {formatMoney(item.price)} each\n            </em>\n          </p>\n        </div>\n        <RemoveFromCart id={cartItem.cartItemId} />\n      </CartItemStyles>\n  );\n};\n\nCartItem.propTypes = {\n  cartItem: PropTypes.object.isRequired,\n};\n\nexport default CartItem;\n","export default function calcTotalPrice(cart) {\n  return cart.reduce((tally, cartItem) => {\n    if (!cartItem.item) return tally;\n    return tally + cartItem.quantity * cartItem.item.price;\n  }, 0);\n}\n","import styled from 'styled-components';\nimport React from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst ErrorStyles = styled.div`\n  padding: 2rem;\n  background: white;\n  margin: 2rem 0;\n  border: 1px solid rgba(0, 0, 0, 0.05);\n  border-left: 5px solid red;\n  p {\n    margin: 0;\n    font-weight: 100;\n  }\n  strong {\n    margin-right: 1rem;\n  }\n`;\n\nconst DisplayError = ({ error }) => {\n  if (!error || !error.message) return null;\n  let msg = error.message;\n  if ((msg).includes(\"JWTExpired\")) {\n    msg = \"Please refresh the tab to login again\"\n  }\n  if (error.networkError && error.networkError.result && error.networkError.result.errors.length) {\n    return error.networkError.result.errors.map((error, i) => (\n      <ErrorStyles key={i}>\n        <p data-test=\"graphql-error\">\n          <strong>Oops!</strong>\n          {msg.replace('GraphQL error: ', '')}\n        </p>\n      </ErrorStyles>\n    ));\n  }\n  return (\n    <ErrorStyles>\n      <p data-test=\"graphql-error\">\n        <strong>Oops!</strong>\n        {msg.replace('GraphQL error: ', '')}\n      </p>\n    </ErrorStyles>\n  );\n};\n\nDisplayError.defaultProps = {\n  error: {},\n};\n\nDisplayError.propTypes = {\n  error: PropTypes.object,\n};\n\nexport default DisplayError;\n","import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport {useMutation} from '@apollo/react-hooks';\nimport NProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport {useHistory} from 'react-router';\nimport {useCognito} from './Cognito/react-cognito-spa';\nimport jwtDecode from 'jwt-decode';\n\nconst CREATE_ORDER_MUTATION = gql`\n    mutation createOrder($token: String!) {\n        createOrder(token: $token) {\n            id\n            status\n        }\n    }\n`;\n\nconst TakeMyMoney =({children, cart, total}) => {\n  let history = useHistory();\n  const {idToken} = useCognito();\n  const decodedJwt = jwtDecode(idToken);\n  const [sendOrder] = useMutation(CREATE_ORDER_MUTATION);\n  const onToken = async (res) => {\n    NProgress.start();\n    // manually call the mutation once we have the stripe token\n    await sendOrder({\n      variables: {\n        token: res.id,\n      },\n    }).then(({data})=> {\n      NProgress.done();\n      history.push(`/order/${data.createOrder.id}`);\n    })\n    .catch(err => {\n      NProgress.done();\n      console.error(err.message);\n    });\n    \n  };\n\n    return (\n            <StripeCheckout\n                amount={calcTotalPrice(cart)}\n                name=\"Mazada\"\n                description={`Order of ${total} items!`}\n                image={cart.length && cart[0].item && cart[0].item.img}\n                stripeKey=\"pk_test_rCwobAubfaGyn2GzBv07Mql100eHnNwzpY\"\n                currency=\"MYR\"\n                email={decodedJwt && decodedJwt.email ? decodedJwt.email : 'mazada@mazada.com'}\n                token={res => onToken(res)}\n            >\n              {children}\n            </StripeCheckout>\n    );\n}\n\nexport default TakeMyMoney;\n","import React from 'react';\nimport {useSubscription} from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport CartStyles from './styles/CartStyles';\nimport Supreme from './styles/Supreme';\nimport CloseButton from './styles/CloseButton';\nimport SickButton from './styles/SickButton';\nimport CartItem from './CartItem';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport formatMoney from '../lib/formatMoney';\nimport {GET_ALL_ITEMS_IN_CART, useCartContext} from './Header';\nimport Error from './ErrorMessage';\nimport TakeMyMoney from './TakeMyMoney';\n\n\nconst CART_ITEMS = gql`\n    subscription CART_ITEMS {\n        items( where: {cart_items: {}} ) {\n            id\n            title\n            description\n            img\n            price\n        }\n    }\n`;\n\nconst Cart = () => {\n  const {isOpen, setIsOpen, setCartCount} = useCartContext();\n  //temporary not nice workarounds bcz of subscriptions not supporting deep level queries\n  const { loading2, error2,  data : cartData } = useSubscription(GET_ALL_ITEMS_IN_CART);\n  const { loading, error, data } = useSubscription(CART_ITEMS);\n  \n  if (loading || loading2) return <p>Loading...</p>;\n  if (error || error2) {\n    console.error(error);\n    console.error(error2);\n    return (\n        <>\n        {error ? <Error error={error} />  : <Error error={error2} />}\n        </>\n        )\n  }\n  \n  const getCartSize = (itemsArray) => {\n    return itemsArray.reduce((accum, item) => {\n      return accum + item.quantity\n    },0)\n  };\n  \n  const handleToggle = () => {\n    setIsOpen(!isOpen)\n  };\n  const cartLength = cartData && cartData.cart_items ? getCartSize(cartData.cart_items) : 0;\n  const cart = cartData && cartData.cart_items ? cartData.cart_items : [];\n  setCartCount(cartLength);\n  const cartWithItems = cart.map( cartItem => {\n    const item =  data.items.filter(item=> item.id === cartItem.item_id);\n    return {\n      cartItemId: cartItem.id,\n      quantity: cartItem.quantity,\n      item: item[0]\n    }\n  });\n  \n\n  \n  return (\n      <CartStyles open={isOpen}>\n        <header>\n          <CloseButton onClick={handleToggle} title=\"close\">\n            &times;\n          </CloseButton>\n          <Supreme>Your Cart</Supreme>\n          <p>\n            You Have {cartLength} Item{cartLength === 1 ? '' : 's'} in your cart.\n          </p>\n        </header>\n        <ul>{cartWithItems.map(\n            cartItem => <CartItem key={cartItem.cartItemId} cartItem={cartItem}/>)}</ul>\n        <footer>\n          <p>{formatMoney(calcTotalPrice(cartWithItems))}</p>\n          {cartLength > 0 && (\n              <TakeMyMoney cart={cartWithItems} total={cartLength}>\n                <SickButton>Checkout</SickButton>\n              </TakeMyMoney>\n          )}\n        </footer>\n      </CartStyles>\n  )\n};\n\nexport default Cart;\n","// Hook\nimport {useState} from 'react';\n\nexport function useLocalStorage(key, initialValue) {\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n  \n  // Return a wrapped version of useState's setter function that ...\n  // ... persists the new value to localStorage.\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n          value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n  \n  return [storedValue, setValue];\n}\n","import React, {useContext} from 'react';\nimport styled from 'styled-components';\nimport Mazada from '../images/mazada.png';\nimport {Link} from 'react-router-dom';\nimport Nav from './Nav';\nimport 'nprogress/nprogress.css';\nimport Cart from './Cart';\nimport {useLocalStorage} from '../lib/useLocalStorage';\nimport gql from 'graphql-tag';\n\nconst Logo = styled.h1`\n  font-size: 4rem;\n  margin-left: 2rem;\n  position: relative;\n  z-index: 2;\n  transform: skew(-7deg);\n  a {\n    padding: 0.5rem 1rem;\n  }\n  @media (max-width: 1300px) {\n    margin: 0;\n    text-align: center;\n  }\n`;\n\nconst StyledHeader = styled.header`\n  .bar {\n    border-bottom: 10px solid ${props => props.theme.black};\n    display: grid;\n    grid-template-columns: auto 1fr;\n    justify-content: space-between;\n    align-items: stretch;\n    @media (max-width: 1300px) {\n      grid-template-columns: 1fr;\n      justify-content: center;\n    }\n  }\n  .sub-bar {\n    display: grid;\n    grid-template-columns: 1fr auto;\n    border-bottom: 1px solid ${props => props.theme.lightgrey};\n  }\n`;\n\nconst GET_ALL_ITEMS_IN_CART = gql`\n    subscription GET_ALL_ITEMS_IN_CART {\n        cart_items {\n            id\n            item_id\n            quantity\n        }\n    }\n`;\n\nconst CartContext = React.createContext(null);\nexport const useCartContext = () => useContext(CartContext);\n\nconst Header = () => {\n  const [isOpen, setIsOpen] = useLocalStorage('isCartOpen', false);\n  const [cartCount, setCartCount] = useLocalStorage('cartCount', false);\n  return (\n      <StyledHeader>\n        <CartContext.Provider value={{\n          isOpen,\n          setIsOpen,\n          cartCount,\n          setCartCount\n        }}>\n          <div className=\"bar\">\n            <Logo>\n              <Link to=\"/\"><img  width=\"300px\" src={Mazada} alt=\"Mazada Logo\"/></Link>\n            </Logo>\n            <Nav />\n          </div>\n          <Cart/>\n        </CartContext.Provider>\n      </StyledHeader>\n    )\n};\n\n\nexport default Header;\nexport { GET_ALL_ITEMS_IN_CART };\n","import React from 'react';\nimport styled, {createGlobalStyle, ThemeProvider} from 'styled-components';\nimport Header from './Header';\n\nconst theme = {\n  red: '#2e8ca2',\n  secondColor:'#dc3535',\n  black: '#393939',\n  grey: '#3A3A3A',\n  lightgrey: '#E1E1E1',\n  offWhite: '#EDEDED',\n  maxWidth: '1000px',\n  bs: '0 12px 24px 0 rgba(0, 0, 0, 0.09)',\n};\n\nconst StyledPage = styled.div`\n  background: white;\n  color: ${props => props.theme.black};\n`;\n\nconst Inner = styled.div`\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n  padding: 2rem;\n`;\n\nexport const GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'radnika_next';\n    src:  url('/fonts/radnikanext-medium-webfont.woff2') format('woff2');\n    font-weight: normal;\n    font-style: normal;\n  }\n  html {\n    box-sizing: border-box;\n    font-size: 10px;\n  }\n  *, *:before, *:after {\n    box-sizing: inherit;\n  }\n  body {\n    padding: 0;\n    margin: 0;\n    font-size: 1.5rem;\n    line-height: 2;\n    font-family: 'radnika_next','serif';\n  }\n  a {\n    text-decoration: none;\n    color: ${theme.black};\n  }\n  button {  font-family: 'radnika_next','serif'; }\n`;\n\nconst Page = ({children}) => {\n  \n  return (\n      <ThemeProvider theme={theme}>\n        <StyledPage>\n          <GlobalStyle/>\n          <Header/>\n          <Inner>{children}</Inner>\n        </StyledPage>\n      </ThemeProvider>\n  );\n};\n\nexport default Page;\n","import styled from 'styled-components';\n\nconst Title = styled.h3`\n  margin: 0 1rem;\n  text-align: center;\n  transform: skew(-5deg) rotate(-1deg);\n  margin-top: -3rem;\n  text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);\n  a {\n    background: ${props => props.theme.secondColor};\n    display: inline;\n    line-height: 1.3;\n    font-size: 4rem;\n    text-align: center;\n    color: white;\n    padding: 0 1rem;\n  }\n`;\n\nexport default Title;\n","import styled from 'styled-components';\n\nconst Item = styled.div`\n  background: white;\n  border: 1px solid ${props => props.theme.offWhite};\n  box-shadow: ${props => props.theme.bs};\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  img {\n    width: 100%;\n    height: 400px;\n    object-fit: cover;\n  }\n  p {\n    font-size: 12px;\n    line-height: 2;\n    font-weight: 300;\n    flex-grow: 1;\n    padding: 0 3rem;\n    font-size: 1.5rem;\n  }\n  .buttonList {\n    display: grid;\n    width: 100%;\n    border-top: 1px solid ${props => props.theme.lightgrey};\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n    grid-gap: 1px;\n    background: ${props => props.theme.lightgrey};\n    & > * {\n      background: #fdc6ad;\n      border: 0;\n      font-family: 'radnika_next', 'serif';\n      font-size: 30px;\n      padding: 1rem;\n    }\n  }\n`;\n\nexport default Item;\n","import styled from 'styled-components';\n\nconst PriceTag = styled.span`\n  background: ${props => props.theme.red};\n  transform: rotate(3deg);\n  color: white;\n  font-weight: 600;\n  padding: 5px;\n  line-height: 1;\n  font-size: 3rem;\n  display: inline-block;\n  position: absolute;\n  top: -3px;\n  right: -3px;\n`;\n\nexport default PriceTag;\n","import React from 'react';\nimport {useMutation, useQuery} from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nconst GET_CURRENT_ITEM_IN_CART = gql`\n        query GET_CURRENT_ITEM_IN_CART($id: uuid!) {\n            cart_items(where: {item_id : {_eq: $id}}) {\n                id\n                item_id\n                quantity\n            }\n        }\n`;\n\nconst ADD_TO_CART_MUTATION = gql`\n    mutation ADD_TO_CART_MUTATION($id: uuid!) {\n        insert_cart_items(objects: {item_id: $id}) {\n            returning {\n                id\n                item_id\n                quantity\n            }\n        }\n    }\n`;\n\nconst UPDATE_ITEM_IN_CART = gql`\n    mutation UPDATE_ITEM_IN_CART($cart_id: uuid!, $quantity: Int!) {\n        update_cart_items(where: {id : {_eq: $cart_id}}, _set: {quantity: $quantity}) {\n            returning {\n                id\n                item_id\n                quantity\n            }\n        }\n    }\n`;\n\nconst AddToCart = (props) => {\n    // const { cartItems } = useCartContext();\n    const [isLoading, setLoading] = React.useState(false);\n    const { id } = props;\n    const [updateCart] = useMutation(UPDATE_ITEM_IN_CART);\n    const [addToCart] = useMutation(ADD_TO_CART_MUTATION);\n    const {error, data} = useQuery(GET_CURRENT_ITEM_IN_CART, {\n        variables: {id: id},\n    });\n    \n    const handleClick = async () => {\n        setLoading(true);\n        if ( error ) {\n            console.error(error);\n        }\n    \n        const currentItemInCart = data.cart_items;\n        if (currentItemInCart &&  currentItemInCart.length > 0) {\n            const cart_id = currentItemInCart[0].id;\n            const quantity = currentItemInCart[0].quantity;\n            await updateCart({\n                variables: {\n                    cart_id,\n                    quantity:quantity + 1\n                },\n                refetchQueries: [\"GET_CURRENT_ITEM_IN_CART\"],\n                update(cache, {data}) {\n                    if ( !data ) {\n                        return null;\n                    }\n                }\n            }).then(({data}) => {\n                setLoading(false);\n            }).catch(e => {\n                console.log(\"ERROR OCCURRED\", e);\n                setLoading(false);\n            })\n        } else {\n            await addToCart({\n                    variables: {\n                        id: id\n                    }, refetchQueries: [\"GET_CURRENT_ITEM_IN_CART\"],\n                    update(cache, {data}) {\n                        if ( !data ) {\n                            return null;\n                        }\n                    }\n                }).then(({data}) => {\n                setLoading(false);\n            }).catch(e => {\n                console.log(\"ERROR OCCURRED\", e);\n                setLoading(false);\n            })\n        }\n    };\n    return (\n              <button disabled={isLoading} onClick={handleClick}>\n                Add{isLoading && 'ing'} To Cart 🛒\n              </button>\n    );\n}\nexport default AddToCart;\nexport { ADD_TO_CART_MUTATION };\n","import React from 'react';\nimport Title from './styles/Title';\nimport ItemStyles from './styles/ItemStyles';\nimport PriceTag from './styles/PriceTag';\nimport formatMoney from '../lib/formatMoney';\nimport {Link} from 'react-router-dom';\nimport AddToCart from './AddToCart';\n\nconst Item = (props) => {\n\n\n    const { item } = props;\n    return (\n        <ItemStyles>\n          {item.img && <img src={item.img} alt={item.title} />}\n          \n          <Title>\n            <Link\n                to={{\n                  pathname: `/item/${item.id}`\n                }}\n            >\n              {item.title}\n            </Link>\n          </Title>\n          <PriceTag>{formatMoney(item.price)}</PriceTag>\n          <p>Sold by {item.store.name}</p>\n          <p>{item.description}</p>\n          \n          <div className=\"buttonList\">\n            {/*<Link*/}\n            {/*    to={{*/}\n            {/*      pathname: 'update',*/}\n            {/*      query: { id: item.id },*/}\n            {/*    }}*/}\n            {/*>*/}\n            {/*  Edit<span role=\"img\" aria-label=\"pen\"> ✏️</span>*/}\n            {/*</Link>*/}\n            <AddToCart id={item.id} />\n            {/*<button>Delete </button>*/}\n          </div>\n        </ItemStyles>\n    );\n  \n}\n\nexport  default Item;\n","import React, {useEffect, useState} from 'react';\nimport {useSubscription} from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport Item from './Item';\nimport {useLocation} from 'react-router';\nimport NProgress from 'nprogress';\nimport Error from './ErrorMessage';\n\nconst ALL_ITEMS_QUERY = gql`\n    subscription ALL_ITEMS_QUERY {\n        items(order_by: {created_at: desc}) {\n            id\n            title\n            img\n            description\n            price\n            store_id\n            created_at\n            store {\n                name\n            }\n        }\n    }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst ItemsList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${props => props.theme.maxWidth};\n  margin: 0 auto;\n  @media (max-width: 600px) {\n      grid-template-columns: 1fr;\n      /* OR, change value to 'none' */\n  }\n`;\n\nconst Items =() => {\n  \n  const [hasRendered, setHasRendered] = useState(false);\n  let location = useLocation();\n  \n  useEffect(() => {\n    NProgress.done();\n    setHasRendered(true);\n  }, [location]);\n  \n  if ( !hasRendered ) {\n    NProgress.start();\n  }\n  \n  const { loading, error, data } = useSubscription(ALL_ITEMS_QUERY);\n  \n  if (loading) return <p>Loading...</p>;\n  if (error) {\n    console.error(error);\n    return <Error error={error} />;\n  }\n  \n  return (\n        <Center>\n              <ItemsList>{data.items.map(item => <Item item={item} key={item.id} />)}</ItemsList>\n        </Center>\n    );\n}\n\nexport default Items;\nexport { ALL_ITEMS_QUERY };\n","import React from 'react';\nimport gql from 'graphql-tag';\nimport { Helmet } from 'react-helmet'\nimport Error from './ErrorMessage';\nimport styled from 'styled-components';\n\nimport {useParams} from 'react-router';\nimport {useQuery} from '@apollo/react-hooks';\nimport formatMoney from '../lib/formatMoney';;\n\nconst SingleItemStyles = styled.div`\n  max-width: 1200px;\n  margin: 2rem auto;\n  box-shadow: ${props => props.theme.bs};\n  display: grid;\n  grid-auto-columns: 1fr;\n  grid-auto-flow: column;\n  min-height: 800px;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n  .details {\n    margin: 3rem;\n    font-size: 2rem;\n  }\n`;\n\nconst StoreContainer = styled.div`\n     box-shadow: 0 12px 24px 0 rgba(187, 144, 29, 0.79);\n     padding-left: 5px;\n     margin-top: 90px;\n`;\n\nconst SINGLE_ITEM_QUERY = gql`\n    query SINGLE_ITEM_QUERY($id: uuid!) {\n        items_by_pk( id: $id ) {\n            id\n            title\n            description\n            img\n            price\n            store_id\n            store {\n                description\n                name\n            }\n        }\n    }\n`;\nconst SingleItem = () => {\n  let {id} = useParams();\n  const { loading, error, data } = useQuery(SINGLE_ITEM_QUERY, {\n    variables: {id: id}\n  });\n  \n  if (loading) return <p>Loading...</p>;\n  if (error) {\n    console.error(error);\n    return <Error error={error} />;\n  }\n    if ( !data.items_by_pk ) return <p>No Item Found for {id}</p>;\n    const item = data.items_by_pk;\n    \n    return (\n        <SingleItemStyles>\n          <Helmet>\n            <title>{item.title}</title>\n          </Helmet>\n          <img src={item.img} alt={item.title}/>\n          <div className=\"details\">\n            <h2>Viewing {item.title}</h2>\n            <p>{item.description}</p>\n            <p>{formatMoney(item.price)}</p>\n            <StoreContainer>\n            <p>Store: {item.store.name}</p>\n            <p>{item.store.description}</p>\n            </StoreContainer>\n          </div>\n        </SingleItemStyles>\n    );\n};\n\nexport default SingleItem;\nexport {SINGLE_ITEM_QUERY};\n\n\n","import React from 'react';\nimport ItemStyles from './styles/ItemStyles';\nimport {Link, useHistory} from 'react-router-dom';\n\nimport styled from 'styled-components';\n\nconst StoreTitle = styled.h3`\n  margin: 0 1rem;\n  text-align: center;\n  transform: skew(-5deg) rotate(-1deg);\n  margin-top: -1rem;\n  text-shadow: 2px 2px 0 rgba(0, 0, 0, 0.1);\n  a {\n    background: ${props => props.theme.red};\n    display: inline;\n    line-height: 1.3;\n    font-size: 4rem;\n    text-align: center;\n    color: white;\n    padding: 0 1rem;\n  }\n`;\n\nconst StoreDesc = styled.p`\n  margin-top: 30px;\n`;\n\n\nconst Store = (props) => {\n  let history = useHistory();\n  const { store } = props;\n  return (\n      <ItemStyles>\n        \n        <StoreTitle>\n          <Link\n              to={{\n                pathname: `/store/${store.id}`\n              }}\n          >\n            {store.name}\n          </Link>\n        </StoreTitle>\n        <StoreDesc>{store.description}</StoreDesc>\n        <div className=\"buttonList\">\n          <button  type='button' onClick={() => { history.push(`/store/${store.id}`) }}>Open Store</button>\n        </div>\n      </ItemStyles>\n  );\n  \n}\n\nexport default Store;\n","import React, {useEffect, useState} from 'react';\nimport {useQuery} from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport {useHistory, useLocation} from 'react-router';\nimport NProgress from 'nprogress';\nimport Store from './Store';\n\nconst ALL_STORES_QUERY = gql`\n    query ALL_STORES_QUERY {\n        user_store {\n            store {\n                id\n                name\n                description\n                created_at\n            }\n        }\n    }\n`;\n\nconst Center = styled.div`\n  text-align: center;\n`;\n\nconst StoresList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-gap: 60px;\n  max-width: ${props => props.theme.maxWidth};\n  margin: 80px auto;\n  min-height: 200px;\n    @media (max-width: 600px) {\n      grid-template-columns: 1fr;\n      /* OR, change value to 'none' */\n  }\n`;\n\nconst Stores =() => {\n  let history = useHistory();\n  \n  const [hasRendered, setHasRendered] = useState(false);\n  let location = useLocation();\n  \n  useEffect(() => {\n    NProgress.done();\n    setHasRendered(true);\n  }, [location]);\n  \n  if ( !hasRendered ) {\n    NProgress.start();\n  }\n  \n  const { loading, error, data } = useQuery(ALL_STORES_QUERY);\n  \n  if (loading) return <p>Loading...</p>;\n  if (error) {\n    console.error(error);\n    return <div>Error!</div>;\n  }\n  \n  if (!data.user_store || !data.user_store.length) {\n    return  (\n        <Center>\n          <p>You have no Stores yet. Click below to create a new store.</p>\n          <StaticDesc/>\n          <button type='button'\n                  onClick={() => { history.push('/createStore') }}>Create New Store</button>\n        </Center>\n    )\n  }\n\n  return (\n      <Center>\n        <h2> Your Store List</h2>\n        <StaticDesc/>\n        <button type='button'\n                onClick={() => { history.push('/createStore') }}>Create Another Store</button>\n        <StoresList>{data.user_store.map(user_store => <Store store={user_store.store} key={user_store.store.id} />)}</StoresList>\n      </Center>\n  );\n};\n\nconst StaticDesc = () => (\n    <p>You can create new items to sell in your store and view your orders.</p>\n);\n\nexport default Stores;\nexport { ALL_STORES_QUERY };\n","import gql from 'graphql-tag';\nimport React from 'react';\nimport {Helmet} from 'react-helmet';\nimport Error from './ErrorMessage';\nimport {\n  Card,\n  Col,\n  Container,\n  Jumbotron,\n  ListGroup,\n  Row,\n} from 'react-bootstrap';\nimport {useHistory, useParams} from 'react-router';\nimport {useQuery} from '@apollo/react-hooks';\nimport formatMoney from '../lib/formatMoney';\n\nconst SINGLE_STORE_QUERY = gql`\n    query SINGLE_STORE_QUERY($id: uuid!) {\n        stores_by_pk( id: $id ) {\n            description\n            created_at\n            id\n            name\n            items_aggregate {\n                aggregate {\n                    count\n                }\n            }\n            items {\n                id\n                img\n                title\n                description\n                created_at\n            }\n            order_items_aggregate {\n                aggregate {\n                    count\n                }\n            }\n            order_items {\n                id\n                title\n                user {\n                    name\n                }\n                order_id\n                price\n                quantity\n                status\n            }\n        }\n    }\n`;\n\n\nconst SingleStore = () => {\n  let {id} = useParams();\n  const {loading, error, data} = useQuery(SINGLE_STORE_QUERY, {\n    variables: {id: id},\n  });\n  \n  if ( loading ) return <p>Loading...</p>;\n  if ( error ) {\n    console.error(error);\n    return <Error error={error}/>;\n  }\n  if ( !data.stores_by_pk ) return <p>No Store Found for {id}</p>;\n  \n  const containerStyle = {\n    marginTop: \"70px\"\n  };\n  \n  const store = data.stores_by_pk;\n  \n  return (\n      <Container style={containerStyle} >\n          <Helmet>\n            <title>{store.name}</title>\n          </Helmet>\n            <Row>\n            <Col xl={10} lg={8} md={8} sm={8} xs={12}>\n              <StoreLayout store={store} />\n            </Col>\n            </Row>\n      </Container>\n  );\n};\n\n\nconst StoreLayout = ({store}) => {\n  let history = useHistory();\n  return (\n      <Container>\n        <Row>\n          <Col>\n            <Jumbotron>\n              <h2>{store.name}</h2>\n              <p>{store.description}</p>\n              <button type='button'\n                      onClick={() => { history.push(`/store/${store.id}/createItem`) }}>Create New Item</button>\n            </Jumbotron>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={true}>\n            <Card>\n              <Card.Body>\n                <Card.Title>Items  -  {store.items_aggregate.aggregate.count}</Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  Current Items in your store\n                </Card.Subtitle>\n                <ListGroup>\n                  {store.items.map(item => <ListGroup.Item key={item.id} eventKey={item.id} onClick={() => { history.push(`/item/${item.id}`) }}> {item.title} </ListGroup.Item>)}\n                </ListGroup>\n              </Card.Body>\n              <Card.Footer className=\"text-muted\">\n                All Items will show here once created\n              </Card.Footer>\n            </Card>\n          </Col>\n          <Col lg={true}>\n            <Card>\n              <Card.Body>\n                <Card.Title>Orders  - {store.order_items_aggregate.aggregate.count}\n                </Card.Title>\n                <Card.Subtitle className=\"mb-2 text-muted\">\n                  Total Sales {formatMoney(store.order_items.reduce(((accum, item)=> accum+item.price),0))}\n                </Card.Subtitle>\n                <ListGroup>\n                  {/*<ListGroup.Item>{store.order_items}</ListGroup.Item>*/}\n                  {store.order_items.map(order => <ListGroup.Item key={order.id} eventKey={order.id} > <h4> {order.title}  (qty: {order.quantity}) </h4>  <p>Total: {formatMoney(order.price)}</p></ListGroup.Item>)}\n                </ListGroup>\n              </Card.Body>\n              <Card.Footer className=\"text-muted\">\n                All orders will show here once created\n              </Card.Footer>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n\n      )\n      \n}\n\n\nexport default SingleStore;\nexport {SINGLE_STORE_QUERY};\n\n\n","import styled, { keyframes } from 'styled-components';\n\nconst loading = keyframes`\n  from {\n    background-position: 0 0;\n    /* rotate: 0; */\n  }\n\n  to {\n    background-position: 100% 100%;\n    /* rotate: 360deg; */\n  }\n`;\n\nconst Form = styled.form`\n  box-shadow: 0 0 5px 3px rgba(0, 0, 0, 0.05);\n  background: rgba(0, 0, 0, 0.02);\n  border: 5px solid white;\n  padding: 20px;\n  font-size: 1.5rem;\n  line-height: 1.5;\n  font-weight: 600;\n  label {\n    display: block;\n    margin-bottom: 1rem;\n  }\n  input,\n  textarea,\n  select {\n    width: 100%;\n    padding: 0.5rem;\n    font-size: 1rem;\n    border: 1px solid black;\n    &:focus {\n      outline: 0;\n      border-color: ${props => props.theme.red};\n    }\n  }\n  button,\n  input[type='submit'] {\n    width: auto;\n    background: red;\n    color: white;\n    border: 0;\n    font-size: 2rem;\n    font-weight: 600;\n    padding: 0.5rem 1.2rem;\n  }\n  fieldset {\n    border: 0;\n    padding: 0;\n\n    &[disabled] {\n      opacity: 0.5;\n    }\n    &::before {\n      height: 10px;\n      content: '';\n      display: block;\n      background-image: linear-gradient(to right, #ff3019 0%, #e2b04a 50%, #ff3019 100%);\n    }\n    &[aria-busy='true']::before {\n      background-size: 50% auto;\n      animation: ${loading} 0.5s linear infinite;\n    }\n  }\n`;\n\nexport default Form;\n","import React from 'react';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport {useMutation} from '@apollo/react-hooks';\nimport Error from './ErrorMessage';\nimport {useHistory} from 'react-router';\nimport {ALL_STORES_QUERY} from './Stores';\n\n\nconst CREATE_STORE_MUTATION = gql`\n    mutation CREATE_STORE_MUTATION(\n        $name: String!\n        $description: String!\n    ) {\n        insert_user_store(\n            objects: {store: {data:{\n                name: $name\n                description: $description\n            }}}) {\n            returning{\n                store{\n                    id\n                    name\n                    description\n                    created_at\n                }\n            }\n        }\n    }\n`;\n\n\nconst CreateStore = () => {\n  \n  const [addStore, setAddStore ] = React.useState({ name: '', description: ''});\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setAddStore(prevState => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n  \n\n  let history = useHistory();\n  const [createStore] = useMutation(CREATE_STORE_MUTATION);\n  return (\n      <Form\n          data-test=\"form\"\n          onSubmit={async e => {\n            setLoading(true);\n            // Stop the form from submitting\n            e.preventDefault();\n            const { name, description } =  addStore;\n            // call the mutation\n            await createStore({\n              variables: {\n                name: name,\n                description: description\n              },\n              update(cache, {data}) {\n                if (!data) {\n                  return null;\n                }\n                const getExistingStores = cache.readQuery({query: ALL_STORES_QUERY});\n                const existingStores = getExistingStores ? getExistingStores.user_store : [];\n                const newStore = data.insert_user_store.returning[0];\n                cache.writeQuery({\n                  query: ALL_STORES_QUERY,\n                  data: {user_store: [newStore.store, ...existingStores]}\n                })\n              }\n            }).then(({data}) => {\n              setAddStore({name:'', description:''});\n              setLoading(false);\n              const newStore = data.insert_user_store.returning[0];\n              history.push(`/store/${newStore.store.id}`)\n            }).catch(e => {\n              console.log(\"ERROR OCCURRED\" ,e);\n              setError(e);\n              setLoading(false);\n            });\n          }}\n      >\n        <Error error={error} />\n        <fieldset disabled={loading} aria-busy={loading}>\n          <label htmlFor=\"name\">\n            Name of Store\n            <input\n                type=\"text\"\n                id=\"name\"\n                name=\"name\"\n                placeholder=\"Name\"\n                required\n                value={addStore.name}\n                onChange={handleChange}\n            />\n          </label>\n\n          \n          <label htmlFor=\"description\">\n            Description\n            <textarea\n                id=\"description\"\n                name=\"description\"\n                placeholder=\"Enter A Description\"\n                required\n                value={addStore.description}\n                onChange={handleChange}\n            />\n          </label>\n          <button type=\"submit\">Submit</button>\n        </fieldset>\n      </Form>\n  );\n}\n\nexport default CreateStore;\nexport { CREATE_STORE_MUTATION };\n","import React from 'react';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport {useMutation} from '@apollo/react-hooks';\nimport Error from './ErrorMessage';\nimport {useHistory} from 'react-router';\nimport {useParams} from 'react-router';\n\nconst CREATE_ITEM_MUTATION = gql`\n    mutation CREATE_ITEM_MUTATION(\n        $title: String!\n        $description: String!\n        $price: Int!\n        $image: String,\n        $store_id: uuid!\n    ) {\n        insert_items(\n            objects: {\n                title: $title\n                description: $description\n                price: $price\n                img: $image\n                store_id: $store_id\n            }) {\n            returning{\n                id\n                title\n                img\n                description\n                price\n                store_id\n                created_at\n                store {\n                    name\n                }\n            }\n        }\n    }\n`;\n\nconst parseNumber = (value) => {\n  try {\n    const float =   parseFloat(value);\n    return Number.isNaN(float) ? '' : float\n  } catch (e) {\n    return 0;\n  }\n};\n\nconst CreateItem = () => {\n  let {storeId} = useParams();\n  const [addItem, setAddItem ] = React.useState({ title: '', description: '', image: '', price: 0});\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  const handleChange = e => {\n    const { name, type, value } = e.target;\n    const val = type === 'number' ? parseNumber(value) : value;\n    setAddItem(prevState => ({\n      ...prevState,\n      [name]: val,\n    }));\n  };\n  \n  const uploadFile = async e => {\n    const files = e.target.files;\n    const data = new FormData();\n    data.append('file', files[0]);\n    data.append('upload_preset', 'mazada');\n    \n    const res = await fetch('https://api.cloudinary.com/v1_1/abbathaw/image/upload', {\n      method: 'POST',\n      body: data,\n    });\n    const file = await res.json();\n    setAddItem(prevState => ({\n      ...prevState,\n      image: file.secure_url,\n    }));\n  };\n  let history = useHistory();\n  const [createItem] = useMutation(CREATE_ITEM_MUTATION);\n    return (\n              <Form\n                  data-test=\"form\"\n                  onSubmit={async e => {\n                    setLoading(true);\n                    // Stop the form from submitting\n                    e.preventDefault();\n                    const { title, description, price, image } =  addItem;\n                    // call the mutation\n                     await createItem({\n                      variables: {\n                        title: title,\n                        description: description,\n                        price: price * 100,\n                        image: image,\n                        store_id: storeId\n                      }\n                     }).then(({data}) => {\n                        setAddItem({title:'', description:'', price:0, image:''});\n                        setLoading(false);\n                        const newItem = data.insert_items.returning[0];\n                        history.push(`/item/${newItem.id}`)\n                    }).catch(e => {\n                      console.log(\"ERROR OCCURRED\" ,e);\n                      setError(e);\n                      setLoading(false);\n                    });\n                  }}\n              >\n                <Error error={error} />\n                <fieldset disabled={loading} aria-busy={loading}>\n                  <label htmlFor=\"file\">\n                    Image\n                    <input\n                        type=\"file\"\n                        id=\"file\"\n                        name=\"file\"\n                        placeholder=\"Upload an image\"\n                        required\n                        onChange={uploadFile}\n                    />\n                    {addItem.image && (\n                        <img width=\"200\" src={addItem.image} alt=\"Upload Preview\" />\n                    )}\n                  </label>\n                  \n                  <label htmlFor=\"title\">\n                    Title\n                    <input\n                        type=\"text\"\n                        id=\"title\"\n                        name=\"title\"\n                        placeholder=\"Title\"\n                        required\n                        value={addItem.title}\n                        onChange={handleChange}\n                    />\n                  </label>\n                  \n                  <label htmlFor=\"price\">\n                    Price\n                    <input\n                        type=\"number\"\n                        id=\"price\"\n                        name=\"price\"\n                        placeholder=\"Price\"\n                        required\n                        value={addItem.price}\n                        onChange={handleChange}\n                    />\n                  </label>\n                  \n                  <label htmlFor=\"description\">\n                    Description\n                    <textarea\n                        id=\"description\"\n                        name=\"description\"\n                        placeholder=\"Enter A Description\"\n                        required\n                        value={addItem.description}\n                        onChange={handleChange}\n                    />\n                  </label>\n                  <button type=\"submit\">Submit</button>\n                </fieldset>\n              </Form>\n    );\n}\n\nexport default CreateItem;\nexport { CREATE_ITEM_MUTATION };\n","import styled from 'styled-components';\n\nconst OrderStyles = styled.div`\n  max-width: 1000px;\n  margin: 0 auto;\n  border: 1px solid ${props => props.theme.offWhite};\n  box-shadow: ${props => props.theme.bs};\n  padding: 2rem;\n  border-top: 10px solid red;\n  & > p {\n    display: grid;\n    grid-template-columns: 1fr 5fr;\n    margin: 0;\n    border-bottom: 1px solid ${props => props.theme.offWhite};\n    span {\n      padding: 1rem;\n      &:first-child {\n        font-weight: 900;\n        text-align: right;\n      }\n    }\n  }\n  .order-item {\n    border-bottom: 1px solid ${props => props.theme.offWhite};\n    display: grid;\n    grid-template-columns: 300px 1fr;\n    align-items: center;\n    grid-gap: 2rem;\n    margin: 2rem 0;\n    padding-bottom: 2rem;\n    img {\n      width: 100%;\n      object-fit: cover;\n    }\n  }\n`;\nexport default OrderStyles;\n","import React from 'react';\nimport Error from './ErrorMessage';\nimport OrderStyles from './styles/OrderStyles';\nimport {useParams} from 'react-router';\nimport {useQuery} from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport {Helmet} from 'react-helmet';\nimport formatMoney from '../lib/formatMoney';\n\nconst SINGLE_ORDER_QUERY = gql`\n    query SINGLE_ORDER_QUERY($id: uuid!) {\n        orders_by_pk( id: $id ) {\n            id\n            charge\n            created_at\n            paid\n            total\n            order_items {\n                id\n                img\n                description\n                price\n                quantity\n                status\n                store_id\n                title\n            }\n        }\n    }\n`;\n\nconst SingleOrder = () => {\n  let {id} = useParams();\n  const { loading, error, data } = useQuery(SINGLE_ORDER_QUERY, {\n    variables: {id: id}\n  });\n  \n  if (loading) return <p>Loading...</p>;\n  if (error) {\n    console.error(error);\n    return <Error error={error} />;\n  }\n  \n  if ( !data.orders_by_pk ) return <p>No Order Found for {id}</p>;\n  const order = data.orders_by_pk;\n  return (\n      <OrderStyles data-test=\"order\">\n        <Helmet>\n          <title>Mazada - Order {id}</title>\n        </Helmet>\n        <p>\n          <span>Order ID:</span>\n          <span>{id}</span>\n        </p>\n        <p>\n          <span>Charge</span>\n          <span>{order.charge}</span>\n        </p>\n        <p>\n          <span>Date</span>\n          <span>{order.created_at}</span>\n        </p>\n        <p>\n          <span>Order Total</span>\n          <span>{formatMoney(order.total)}</span>\n        </p>\n        <p>\n          <span>Item Count</span>\n          <span>{order.order_items.length}</span>\n        </p>\n        <div className=\"items\">\n          {order.order_items.map(item => (\n              <div className=\"order-item\" key={item.id}>\n                <img src={item.img} alt={item.title} />\n                <div className=\"item-details\">\n                  <h2>{item.title}</h2>\n                  <p>Qty: {item.quantity}</p>\n                  <p>Each: {formatMoney(item.price)}</p>\n                  <p>SubTotal: {formatMoney(item.price * item.quantity)}</p>\n                  <p>{item.description}</p>\n                </div>\n              </div>\n          ))}\n        </div>\n      </OrderStyles>\n      \n      \n  )\n  \n};\n\nexport default SingleOrder;\n\n","import styled from 'styled-components';\n\nconst OrderItemStyles = styled.li`\n  box-shadow: ${props => props.theme.bs};\n  list-style: none;\n  padding: 2rem;\n  border: 1px solid ${props => props.theme.offWhite};\n  h2 {\n    border-bottom: 2px solid red;\n    margin-top: 0;\n    margin-bottom: 2rem;\n    padding-bottom: 2rem;\n  }\n\n  .images {\n    display: grid;\n    grid-gap: 10px;\n    grid-template-columns: repeat(auto-fit, minmax(0, 1fr));\n    margin-top: 1rem;\n    img {\n      height: 200px;\n      object-fit: cover;\n      width: 100%;\n    }\n  }\n  .order-meta {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(20px, 1fr));\n    display: grid;\n    grid-gap: 1rem;\n    text-align: center;\n    & > * {\n      margin: 0;\n      background: rgba(0, 0, 0, 0.03);\n      padding: 1rem 0;\n    }\n    strong {\n      display: block;\n      margin-bottom: 1rem;\n    }\n  }\n`;\n\nexport default OrderItemStyles;\n","import React, {useEffect, useState} from 'react';\nimport styled from 'styled-components';\nimport gql from 'graphql-tag';\nimport {useLocation} from 'react-router';\nimport NProgress from 'nprogress';\nimport {useSubscription} from '@apollo/react-hooks';\nimport Error from './ErrorMessage';\nimport formatMoney from '../lib/formatMoney';\nimport OrderItemStyles from './styles/OrderItemStyles';\nimport {Link} from 'react-router-dom';\n\nconst ALL_ORDERS_QUERY = gql`\n    subscription ALL_ORDERS_QUERY {\n        orders(order_by: {created_at: desc}) {\n            id\n            charge\n            created_at\n            paid\n            total\n            order_items {\n                quantity\n                img\n                title\n                id\n            }\n        }\n    }\n`;\n\nconst OrderUl = styled.ul`\n  display: grid;\n  grid-gap: 4rem;\n  grid-template-columns: repeat(auto-fit, minmax(40%, 1fr));\n`;\n\nconst Orders = () => {\n  \n  const [hasRendered, setHasRendered] = useState(false);\n  let location = useLocation();\n  \n  useEffect(() => {\n    NProgress.done();\n    setHasRendered(true);\n  }, [location]);\n  \n  if ( !hasRendered ) {\n    NProgress.start();\n  }\n  \n  const { loading, error, data } = useSubscription(ALL_ORDERS_QUERY);\n  if (loading) return <p>Loading...</p>;\n  if (error) {\n    console.error(error);\n    return <Error error={error} />;\n  }\n  \n  const orders = data.orders;\n  return(\n      <div>\n        <h2>You have {orders.length} orders</h2>\n        <OrderUl>\n          {orders.map(order => (\n              <OrderItemStyles key={order.id}>\n                <Link\n                    to={{pathname: `/order/${order.id}`}}>\n                    <div className=\"order-meta\">\n                      <p>{order.order_items.reduce((a, b) => a + b.quantity, 0)} Items</p>\n                      <p>{order.order_items.length} Products</p>\n                      <p>{formatMoney(order.total)}</p>\n                    </div>\n                    <div className=\"images\">\n                      {order.order_items.map(item => (\n                          <img key={item.id} src={item.img} alt={item.title} />\n                      ))}\n                    </div>\n                </Link>\n              </OrderItemStyles>\n          ))}\n        </OrderUl>\n      </div>\n  )\n};\n\nexport default Orders;\n","import React from 'react';\n// import jwtDecode from 'jwt-decode';\nimport {useCognito} from './Cognito/react-cognito-spa';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Page from './Page';\nimport Loading from './Cognito/Loading';\n\nimport ApolloClient from 'apollo-client';\nimport {InMemoryCache} from 'apollo-cache-inmemory';\nimport {ApolloProvider} from '@apollo/react-hooks';\nimport Items from './Items';\nimport SingleItem from './SingleItem';\nimport Stores from './Stores';\nimport SingleStore from './SingleStore';\nimport CreateStore from './CreateStore';\nimport CreateItem from './CreateItem';\nimport {WebSocketLink} from 'apollo-link-ws';\nimport SingleOrder from './SingleOrder';\nimport Orders from './Orders';\n\nconst createApolloClient = (idToken) => {\n  return new ApolloClient({\n    link: new WebSocketLink({\n      uri: process.env.REACT_APP_HASURA_ENDPOINT, //change url to ws instead of http when using subscription\n      options: {\n        reconnect: true,\n        connectionParams: {\n          headers: {\n            Authorization: `Bearer ${idToken}`,\n          },\n        }\n      }\n    }),\n    cache: new InMemoryCache(),\n  });\n};\n\nconst App = ({idToken}) => {\n  const {loading} = useCognito();\n  // const decodedJwt = jwtDecode(idToken);\n  const client = createApolloClient(idToken);\n  if ( loading ) {\n    return <Loading/>;\n  }\n  return (\n      <ApolloProvider client={client}>\n        <Router>\n          <Page>\n            <div>\n              <Switch>\n                <Route exact path=\"/\">\n                  <Items/>\n                </Route>\n                <Route path=\"/shop\">\n                  <Items />\n                </Route>\n                <Route path=\"/Sell\">\n                  <Stores />\n                </Route>\n                <Route path=\"/orders\">\n                  <Orders />\n                </Route>\n                <Route path=\"/item/:id\" component={SingleItem} />\n                <Route path=\"/createStore\" component={CreateStore} />\n                <Route path=\"/store/:storeId/createItem\" component={CreateItem} />\n                <Route path=\"/store/:id\" component={SingleStore} />\n                <Route path=\"/order/:id\" component={SingleOrder} />\n              </Switch>\n            </div>\n          </Page>\n        </Router>\n      </ApolloProvider>\n  );\n};\n\nexport default App;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport {CognitoAuth} from 'amazon-cognito-auth-js';\nimport { config as AWSConfig } from 'aws-sdk'\nimport Loading from './Loading';\nimport Login from './Login';\nimport App from '../App';\nimport { AUTH_CONFIG } from './cognito-variables';\n\n\nAWSConfig.region = AUTH_CONFIG.region;\n\n\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n    window.history.replaceState({}, document.title, window.location.pathname);\n\nexport const CognitoContext = React.createContext(null);\nexport const useCognito = () => useContext(CognitoContext);\n\nexport const CognitoProvider = ({\n                                  children,\n                                  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n                                  ...initOptions\n                                }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState();\n  const [cognitoClient, setCognito] = useState();\n  const [loading, setLoading] = useState(true);\n  const [idToken, setIdToken] = useState('');\n  \n  useEffect(() => {\n    const initCognito = async () => {\n      const cognitoFromHook = await new CognitoAuth(initOptions);\n      cognitoFromHook.userhandler = {\n        onSuccess: async (result) =>{\n          console.log(\"Success Logging In\");\n          await handleRedirectCallback(result);\n          const userFromCognito = await cognitoFromHook.getCurrentUser();\n          setUser(userFromCognito);\n        },\n        onFailure: (err) => {\n          console.error(\"Error: Failed to login\", err);\n        }\n      };\n      \n      setCognito(cognitoFromHook);\n      const isAuthenticated = await cognitoFromHook.isUserSignedIn();\n      \n      if (isAuthenticated) {\n        const user = await cognitoFromHook.getCurrentUser();\n        setUser(user);\n        setIsAuthenticated(isAuthenticated);\n        const session = await cognitoFromHook.getSignInUserSession();\n        setIdToken(session.getIdToken().getJwtToken());\n      }\n      return cognitoFromHook;\n    };\n    const curUrl = window.location.href;\n    initCognito().then(async (cognito)=> {\n      await cognito.parseCognitoWebResponse(curUrl);\n      if (!cognito.isUserSignedIn()) {\n        setIsAuthenticated(false)\n      }\n      setLoading(false)\n    });\n    // eslint-disable-next-line\n  }, []);\n  \n  \n  const handleRedirectCallback = async (session) => {\n    if (session) {\n      const idToken = session.getIdToken();\n      setIdToken(idToken.getJwtToken());\n    }\n    setIsAuthenticated(true);\n    return \"ok\";\n  };\n  if (loading) {\n    return (<Loading />);\n  }\n  \n  if (!isAuthenticated) {\n    return (\n        <CognitoContext.Provider\n            value={{\n              isAuthenticated,\n              user,\n              loading,\n              loginWithRedirect: () => cognitoClient.getSession(),\n              logout: () =>  cognitoClient.signOut()\n            }}\n        >\n          <Login />);\n        </CognitoContext.Provider>\n    );\n  }\n  return (\n      isAuthenticated && user ? <CognitoContext.Provider\n          value={{\n            isAuthenticated,\n            idToken,\n            user,\n            loading,\n            loginWithRedirect: () => cognitoClient.getSession(),\n            logout: () =>  cognitoClient.signOut()\n          }}\n      >\n        {children}\n        <App idToken={idToken} />\n      </CognitoContext.Provider> : <Loading/>\n  );\n};\n","import ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport { Route, Router } from \"react-router-dom\";\n\nimport \"./styles/App.css\";\n\nimport history from \"./utils/history\";\nimport { AUTH_CONFIG } from './components/Cognito/cognito-variables';\nimport {CognitoProvider} from \"./components/Cognito/react-cognito-spa\";\n\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nconst mainRoutes = (\n  <Router history={history}>\n    <Route\n      path=\"/\"\n      render={props => (\n        <CognitoProvider\n            AppWebDomain={AUTH_CONFIG.domain}\n            ClientId={AUTH_CONFIG.clientId}\n            UserPoolId={AUTH_CONFIG.UserPoolId}\n            RedirectUriSignIn={AUTH_CONFIG.redirectUri}\n            TokenScopesArray={AUTH_CONFIG.tokenScopes}\n            RedirectUriSignOut={AUTH_CONFIG.signoutUri}\n            onRedirectCallback={onRedirectCallback}\n        />\n      )}\n    />\n  </Router>\n);\n\nReactDOM.render(mainRoutes, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/loading.c5590569.svg\";","module.exports = __webpack_public_path__ + \"static/media/cover.68f1f977.png\";","module.exports = __webpack_public_path__ + \"static/media/mazada.2ee1745b.png\";"],"sourceRoot":""}